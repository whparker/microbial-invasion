(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 13.1' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    212201,       4459]
NotebookOptionsPosition[    209407,       4408]
NotebookOutlinePosition[    209841,       4425]
CellTagsIndexPosition[    209798,       4422]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{
Cell[TextData[{
 Cell[BoxData[
  FormBox[
   TemplateBox[<|"boxes" -> FormBox[
       RowBox[{
         FractionBox[
          RowBox[{
            StyleBox["d", "TI"], 
            SubscriptBox[
             StyleBox["N", "TI"], "1"]}], 
          RowBox[{
            StyleBox["d", "TI"], 
            StyleBox["t", "TI"]}]], "\[LongEqual]", 
         SubscriptBox[
          StyleBox["r", "TI"], "1"], 
         SubscriptBox[
          StyleBox["N", "TI"], "1"], 
         RowBox[{"(", 
           RowBox[{"1", "+", 
             SubscriptBox["\[Alpha]", "11"], 
             SubscriptBox[
              OverscriptBox[
               StyleBox["M", "TI"], "^"], "1"], "+", 
             SubscriptBox["\[Alpha]", "12"], 
             SubscriptBox[
              OverscriptBox[
               StyleBox["M", "TI"], "^"], "2"], "+", 
             SubscriptBox["\[Alpha]", "13"], 
             SubscriptBox[
              OverscriptBox[
               StyleBox["M", "TI"], "^"], "3"]}], ")"}], "-", 
         SubsuperscriptBox[
          StyleBox["N", "TI"], "1", "2"], 
         SubscriptBox[
          StyleBox["c", "TI"], "11"], "-", 
         SubscriptBox[
          StyleBox["N", "TI"], "1"], 
         SubscriptBox[
          StyleBox["N", "TI"], "2"], 
         SubscriptBox[
          StyleBox["c", "TI"], "12"]}], TraditionalForm], "errors" -> {}, 
     "input" -> 
     "\\frac{dN_1}{dt} = r_1N_1(1 + \\alpha_{11}\\hat{M}_1 + \
\\alpha_{12}\\hat{M}_2 + \\alpha_{13}\\hat{M}_3) - N_1^2c_{11} - \
N_1N_2c_{12}", "state" -> "TeX"|>,
    "TeXAssistantTemplate"], TraditionalForm]],ExpressionUUID->
  "f7c8ec80-7d4d-41b5-86f8-bf3643b5366a"],
 "\n",
 Cell[BoxData[
  FormBox[
   TemplateBox[<|"boxes" -> FormBox[
       RowBox[{
         FractionBox[
          RowBox[{
            StyleBox["d", "TI"], 
            SubscriptBox[
             StyleBox["N", "TI"], "2"]}], 
          RowBox[{
            StyleBox["d", "TI"], 
            StyleBox["t", "TI"]}]], "\[LongEqual]", 
         SubscriptBox[
          StyleBox["r", "TI"], "2"], 
         SubscriptBox[
          StyleBox["N", "TI"], "2"], 
         RowBox[{"(", 
           RowBox[{"1", "+", 
             SubscriptBox["\[Alpha]", "21"], 
             SubscriptBox[
              OverscriptBox[
               StyleBox["M", "TI"], "^"], "1"], "+", 
             SubscriptBox["\[Alpha]", "22"], 
             SubscriptBox[
              OverscriptBox[
               StyleBox["M", "TI"], "^"], "2"], "+", 
             SubscriptBox["\[Alpha]", "23"], 
             SubscriptBox[
              OverscriptBox[
               StyleBox["M", "TI"], "^"], "3"]}], ")"}], "-", 
         SubsuperscriptBox[
          StyleBox["N", "TI"], "2", "2"], 
         SubscriptBox[
          StyleBox["c", "TI"], "22"], "-", 
         SubscriptBox[
          StyleBox["N", "TI"], "1"], 
         SubscriptBox[
          StyleBox["N", "TI"], "2"], 
         SubscriptBox[
          StyleBox["c", "TI"], "21"]}], TraditionalForm], "errors" -> {}, 
     "input" -> 
     "\\frac{dN_2}{dt} = r_2N_2(1 + \\alpha_{21}\\hat{M}_1 + \
\\alpha_{22}\\hat{M}_2 + \\alpha_{23}\\hat{M}_3) - N_2^2c_{22} - \
N_1N_2c_{21}", "state" -> "TeX"|>,
    "TeXAssistantTemplate"], TraditionalForm]],ExpressionUUID->
  "d2287c3c-93d0-41b1-afc3-b12b5784bd29"],
 "\n",
 Cell[BoxData[
  FormBox[
   TemplateBox[<|"boxes" -> FormBox[
       RowBox[{
         FractionBox[
          RowBox[{
            StyleBox["d", "TI"], 
            SubscriptBox[
             OverscriptBox[
              StyleBox["M", "TI"], "^"], "1"]}], 
          RowBox[{
            StyleBox["d", "TI"], 
            StyleBox["t", "TI"]}]], "\[LongEqual]", 
         SubscriptBox[
          OverscriptBox[
           StyleBox["M", "TI"], "^"], "1"], 
         OverscriptBox[
          SubscriptBox[
           StyleBox["M", "TI"], "2"], "^"], 
         FractionBox[
          SubscriptBox[
           StyleBox["N", "TI"], "1"], 
          RowBox[{
            SubscriptBox[
             StyleBox["N", "TI"], "1"], "+", 
            SubscriptBox[
             StyleBox["N", "TI"], "2"]}]], "+", 
         SubscriptBox[
          OverscriptBox[
           StyleBox["M", "TI"], "^"], "1"], 
         SubscriptBox[
          OverscriptBox[
           StyleBox["M", "TI"], "^"], "3"], 
         FractionBox[
          SubscriptBox[
           StyleBox["N", "TI"], "1"], 
          RowBox[{
            SubscriptBox[
             StyleBox["N", "TI"], "1"], "+", 
            SubscriptBox[
             StyleBox["N", "TI"], "2"]}]], "-", 
         SubscriptBox[
          OverscriptBox[
           StyleBox["M", "TI"], "^"], "1"], 
         SubscriptBox[
          OverscriptBox[
           StyleBox["M", "TI"], "^"], "2"], 
         StyleBox["v", "TI"], 
         FractionBox[
          SubscriptBox[
           StyleBox["N", "TI"], "2"], 
          RowBox[{
            SubscriptBox[
             StyleBox["N", "TI"], "1"], "+", 
            SubscriptBox[
             StyleBox["N", "TI"], "2"]}]], "-", 
         SubscriptBox[
          OverscriptBox[
           StyleBox["M", "TI"], "^"], "1"], 
         SubscriptBox[
          OverscriptBox[
           StyleBox["M", "TI"], "^"], "3"], 
         SubscriptBox[
          StyleBox["e", "TI"], "1"], 
         FractionBox[
          SubscriptBox[
           StyleBox["N", "TI"], "1"], 
          RowBox[{
            SubscriptBox[
             StyleBox["N", "TI"], "1"], "+", 
            SubscriptBox[
             StyleBox["N", "TI"], "2"]}]], "-", 
         SubscriptBox[
          OverscriptBox[
           StyleBox["M", "TI"], "^"], "1"], 
         SubscriptBox[
          OverscriptBox[
           StyleBox["M", "TI"], "^"], "3"], 
         SubscriptBox[
          StyleBox["e", "TI"], "2"], 
         FractionBox[
          SubscriptBox[
           StyleBox["N", "TI"], "2"], 
          RowBox[{
            SubscriptBox[
             StyleBox["N", "TI"], "1"], "+", 
            SubscriptBox[
             StyleBox["N", "TI"], "2"]}]]}], TraditionalForm], "errors" -> {},
      "input" -> 
     "\\frac{d\\hat{M}_1}{dt} = \\hat{M}_1\\hat{M_2}\\frac{N_1}{N_1 + N_2} + \
\\hat{M}_1\\hat{M}_3\\frac{N_1}{N_1 + N_2} - \
\\hat{M}_1\\hat{M}_2v\\frac{N_2}{N_1 + N_2} - \
\\hat{M}_1\\hat{M}_3e_1\\frac{N_1}{N_1 + N_2} - \
\\hat{M}_1\\hat{M}_3e_2\\frac{N_2}{N_1 + N_2}", "state" -> "TeX"|>,
    "TeXAssistantTemplate"], TraditionalForm]],ExpressionUUID->
  "09874550-02c7-4de0-8be5-df22d6984059"],
 "\n",
 Cell[BoxData[
  FormBox[
   TemplateBox[<|"boxes" -> FormBox[
       RowBox[{
         FractionBox[
          RowBox[{
            StyleBox["d", "TI"], 
            SubscriptBox[
             OverscriptBox[
              StyleBox["M", "TI"], "^"], "2"]}], 
          RowBox[{
            StyleBox["d", "TI"], 
            StyleBox["t", "TI"]}]], "\[LongEqual]", 
         SubscriptBox[
          OverscriptBox[
           StyleBox["M", "TI"], "^"], "1"], 
         SubscriptBox[
          OverscriptBox[
           StyleBox["M", "TI"], "^"], "2"], 
         StyleBox["v", "TI"], 
         FractionBox[
          SubscriptBox[
           StyleBox["N", "TI"], "2"], 
          RowBox[{
            SubscriptBox[
             StyleBox["N", "TI"], "1"], "+", 
            SubscriptBox[
             StyleBox["N", "TI"], "2"]}]], "+", 
         SubscriptBox[
          OverscriptBox[
           StyleBox["M", "TI"], "^"], "2"], 
         SubscriptBox[
          OverscriptBox[
           StyleBox["M", "TI"], "^"], "3"], 
         StyleBox["v", "TI"], 
         FractionBox[
          SubscriptBox[
           StyleBox["N", "TI"], "2"], 
          RowBox[{
            SubscriptBox[
             StyleBox["N", "TI"], "1"], "+", 
            SubscriptBox[
             StyleBox["N", "TI"], "2"]}]], "-", 
         SubscriptBox[
          OverscriptBox[
           StyleBox["M", "TI"], "^"], "1"], 
         OverscriptBox[
          SubscriptBox[
           StyleBox["M", "TI"], "2"], "^"], 
         FractionBox[
          SubscriptBox[
           StyleBox["N", "TI"], "1"], 
          RowBox[{
            SubscriptBox[
             StyleBox["N", "TI"], "1"], "+", 
            SubscriptBox[
             StyleBox["N", "TI"], "2"]}]], "-", 
         SubscriptBox[
          OverscriptBox[
           StyleBox["M", "TI"], "^"], "2"], 
         SubscriptBox[
          OverscriptBox[
           StyleBox["M", "TI"], "^"], "3"], 
         SubscriptBox[
          StyleBox["e", "TI"], "1"], 
         FractionBox[
          SubscriptBox[
           StyleBox["N", "TI"], "1"], 
          RowBox[{
            SubscriptBox[
             StyleBox["N", "TI"], "1"], "+", 
            SubscriptBox[
             StyleBox["N", "TI"], "2"]}]], "-", 
         SubscriptBox[
          OverscriptBox[
           StyleBox["M", "TI"], "^"], "2"], 
         SubscriptBox[
          OverscriptBox[
           StyleBox["M", "TI"], "^"], "3"], 
         SubscriptBox[
          StyleBox["e", "TI"], "2"], 
         FractionBox[
          SubscriptBox[
           StyleBox["N", "TI"], "2"], 
          RowBox[{
            SubscriptBox[
             StyleBox["N", "TI"], "1"], "+", 
            SubscriptBox[
             StyleBox["N", "TI"], "2"]}]]}], TraditionalForm], "errors" -> {},
      "input" -> 
     "\\frac{d\\hat{M}_2}{dt} = \\hat{M}_1\\hat{M}_2v\\frac{N_2}{N_1 + N_2} + \
\\hat{M}_2\\hat{M}_3v\\frac{N_2}{N_1 + N_2} - \
\\hat{M}_1\\hat{M_2}\\frac{N_1}{N_1 + N_2}  - \
\\hat{M}_2\\hat{M}_3e_1\\frac{N_1}{N_1 + N_2} - \
\\hat{M}_2\\hat{M}_3e_2\\frac{N_2}{N_1 + N_2}", "state" -> "TeX"|>,
    "TeXAssistantTemplate"], TraditionalForm]],ExpressionUUID->
  "c2df9ad3-c780-4835-8b4a-a7af75b25eab"],
 "\n",
 Cell[BoxData[
  FormBox[
   TemplateBox[<|"boxes" -> FormBox[
       RowBox[{
         FractionBox[
          RowBox[{
            StyleBox["d", "TI"], 
            SubscriptBox[
             OverscriptBox[
              StyleBox["M", "TI"], "^"], "3"]}], 
          RowBox[{
            StyleBox["d", "TI"], 
            StyleBox["t", "TI"]}]], "\[LongEqual]", 
         SubscriptBox[
          OverscriptBox[
           StyleBox["M", "TI"], "^"], "1"], 
         SubscriptBox[
          OverscriptBox[
           StyleBox["M", "TI"], "^"], "3"], 
         SubscriptBox[
          StyleBox["e", "TI"], "1"], 
         FractionBox[
          SubscriptBox[
           StyleBox["N", "TI"], "1"], 
          RowBox[{
            SubscriptBox[
             StyleBox["N", "TI"], "1"], "+", 
            SubscriptBox[
             StyleBox["N", "TI"], "2"]}]], "+", 
         SubscriptBox[
          OverscriptBox[
           StyleBox["M", "TI"], "^"], "1"], 
         SubscriptBox[
          OverscriptBox[
           StyleBox["M", "TI"], "^"], "3"], 
         SubscriptBox[
          StyleBox["e", "TI"], "2"], 
         FractionBox[
          SubscriptBox[
           StyleBox["N", "TI"], "2"], 
          RowBox[{
            SubscriptBox[
             StyleBox["N", "TI"], "1"], "+", 
            SubscriptBox[
             StyleBox["N", "TI"], "2"]}]], "+", 
         SubscriptBox[
          OverscriptBox[
           StyleBox["M", "TI"], "^"], "2"], 
         SubscriptBox[
          OverscriptBox[
           StyleBox["M", "TI"], "^"], "3"], 
         SubscriptBox[
          StyleBox["e", "TI"], "1"], 
         FractionBox[
          SubscriptBox[
           StyleBox["N", "TI"], "1"], 
          RowBox[{
            SubscriptBox[
             StyleBox["N", "TI"], "1"], "+", 
            SubscriptBox[
             StyleBox["N", "TI"], "2"]}]], "+", 
         SubscriptBox[
          OverscriptBox[
           StyleBox["M", "TI"], "^"], "2"], 
         SubscriptBox[
          OverscriptBox[
           StyleBox["M", "TI"], "^"], "3"], 
         SubscriptBox[
          StyleBox["e", "TI"], "2"], 
         FractionBox[
          SubscriptBox[
           StyleBox["N", "TI"], "2"], 
          RowBox[{
            SubscriptBox[
             StyleBox["N", "TI"], "1"], "+", 
            SubscriptBox[
             StyleBox["N", "TI"], "2"]}]], "-", 
         SubscriptBox[
          OverscriptBox[
           StyleBox["M", "TI"], "^"], "1"], 
         SubscriptBox[
          OverscriptBox[
           StyleBox["M", "TI"], "^"], "3"], 
         FractionBox[
          SubscriptBox[
           StyleBox["N", "TI"], "1"], 
          RowBox[{
            SubscriptBox[
             StyleBox["N", "TI"], "1"], "+", 
            SubscriptBox[
             StyleBox["N", "TI"], "2"]}]], "-", 
         SubscriptBox[
          OverscriptBox[
           StyleBox["M", "TI"], "^"], "2"], 
         SubscriptBox[
          OverscriptBox[
           StyleBox["M", "TI"], "^"], "3"], 
         StyleBox["v", "TI"], 
         FractionBox[
          SubscriptBox[
           StyleBox["N", "TI"], "2"], 
          RowBox[{
            SubscriptBox[
             StyleBox["N", "TI"], "1"], "+", 
            SubscriptBox[
             StyleBox["N", "TI"], "2"]}]]}], TraditionalForm], "errors" -> {},
      "input" -> 
     "\\frac{d\\hat{M}_3}{dt} = \\hat{M}_1\\hat{M}_3e_1\\frac{N_1}{N_1 + N_2} \
+\\hat{M}_1\\hat{M}_3e_2\\frac{N_2}{N_1 + N_2} + \
\\hat{M}_2\\hat{M}_3e_1\\frac{N_1}{N_1 + N_2} + \
\\hat{M}_2\\hat{M}_3e_2\\frac{N_2}{N_1 + N_2} - \
\\hat{M}_1\\hat{M}_3\\frac{N_1}{N_1 + N_2} - \
\\hat{M}_2\\hat{M}_3v\\frac{N_2}{N_1 + N_2}", "state" -> "TeX"|>,
    "TeXAssistantTemplate"], TraditionalForm]],ExpressionUUID->
  "85467d4e-a246-40f5-bee0-0cac0ae0a0ac"]
}], "Text",
 CellChangeTimes->{
  3.9019916428142023`*^9, 3.901991689235897*^9, {3.90199175167773*^9, 
   3.901991755867588*^9}, {3.9019918152753716`*^9, 3.9019918180995483`*^9}, {
   3.9019918975841646`*^9, 3.901991900645131*^9}, {3.9019921823600454`*^9, 
   3.9019921870402393`*^9}, {3.9019922615527954`*^9, 3.90199226998847*^9}, 
   3.901992413615121*^9, {3.9019925535039186`*^9, 3.901992558559191*^9}, {
   3.901992674356439*^9, 3.901992674781559*^9}, {3.9019927859440823`*^9, 
   3.9019927987477407`*^9}, {3.9019928381164913`*^9, 
   3.9019928428728356`*^9}, {3.90733103511042*^9, 
   3.907331035512808*^9}},ExpressionUUID->"66ab22b8-542f-44b4-8ebe-\
1db6f57aaf4d"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"Pars", " ", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"r1", "->", 
      RowBox[{"5", "/", "7"}]}], ",", 
     RowBox[{"r2", "->", "1"}], ",", 
     RowBox[{"a11", "->", "1"}], ",", 
     RowBox[{"a12", "->", 
      RowBox[{"9", "/", "5"}]}], ",", 
     RowBox[{"a21", "->", 
      RowBox[{"2", "/", "3"}]}], ",", 
     RowBox[{"a22", "->", "1"}], ",", 
     RowBox[{"c11", "\[Rule]", "1"}], ",", 
     RowBox[{"c12", "\[Rule]", 
      RowBox[{"6", "/", "7"}]}], ",", 
     RowBox[{"c21", "\[Rule]", "1"}], ",", 
     RowBox[{"c22", "\[Rule]", "1"}], ",", 
     RowBox[{"v", "->", 
      RowBox[{"3", "/", "4"}]}], ",", 
     RowBox[{"a13", "->", 
      RowBox[{"1", "/", "2"}]}], ",", 
     RowBox[{"a23", "->", 
      RowBox[{"1", "/", "2"}]}], ",", 
     RowBox[{"e1", "->", 
      RowBox[{"1", "/", "2"}]}], ",", 
     RowBox[{"e2", "->", 
      RowBox[{"1", "/", "2"}]}]}], "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"System", "=", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"N1", "'"}], "[", "t", "]"}], "==", 
      RowBox[{
       RowBox[{"r1", "*", 
        RowBox[{"N1", "[", "t", "]"}], 
        RowBox[{"(", 
         RowBox[{"1", "+", 
          RowBox[{"a11", "*", 
           RowBox[{"M1", "[", "t", "]"}]}], "+", 
          RowBox[{"a12", "*", 
           RowBox[{"M2", "[", "t", "]"}]}], "+", 
          RowBox[{"a13", "*", 
           RowBox[{"(", 
            RowBox[{"1", "-", 
             RowBox[{"M1", "[", "t", "]"}], "-", 
             RowBox[{"M2", "[", "t", "]"}]}], ")"}]}]}], ")"}]}], "-", 
       RowBox[{"c11", "*", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"N1", "[", "t", "]"}], ")"}], "^", "2"}]}], "-", 
       RowBox[{"c12", "*", 
        RowBox[{"N1", "[", "t", "]"}], "*", 
        RowBox[{"N2", "[", "t", "]"}]}]}]}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{
       RowBox[{"N2", "'"}], "[", "t", "]"}], "==", 
      RowBox[{
       RowBox[{"r2", "*", 
        RowBox[{"N2", "[", "t", "]"}], 
        RowBox[{"(", 
         RowBox[{"1", "+", 
          RowBox[{"a21", " ", "*", 
           RowBox[{"M1", "[", "t", "]"}]}], "+", 
          RowBox[{"a22", "*", 
           RowBox[{"M2", "[", "t", "]"}]}], "+", 
          RowBox[{"a23", 
           RowBox[{"(", 
            RowBox[{"1", "-", 
             RowBox[{"M1", "[", "t", "]"}], "-", 
             RowBox[{"M2", "[", "t", "]"}]}], ")"}]}]}], ")"}]}], "-", 
       RowBox[{"c22", "*", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"N2", "[", "t", "]"}], ")"}], "^", "2"}]}], "-", 
       RowBox[{"c21", "*", 
        RowBox[{"N1", "[", "t", "]"}], "*", 
        RowBox[{"N2", "[", "t", "]"}]}]}]}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{
       RowBox[{"M1", "'"}], "[", "t", "]"}], "==", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"M1", "[", "t", "]"}], "*", 
           RowBox[{"M2", "[", "t", "]"}]}], ")"}], "/", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"N1", "[", "t", "]"}], "+", 
           RowBox[{"N2", "[", "t", "]"}]}], ")"}]}], 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"N1", "[", "t", "]"}], "-", 
          RowBox[{"v", "*", 
           RowBox[{"N2", "[", "t", "]"}]}]}], ")"}]}], "-", 
       RowBox[{
        RowBox[{"M1", "[", "t", "]"}], "*", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"1", "-", 
           RowBox[{"M1", "[", "t", "]"}], "-", 
           RowBox[{"M2", "[", "t", "]"}]}], ")"}], "/", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"N1", "[", "t", "]"}], "+", 
           RowBox[{"N2", "[", "t", "]"}]}], ")"}]}], 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"e1", "*", 
           RowBox[{"N1", "[", "t", "]"}]}], "+", 
          RowBox[{"e2", "*", 
           RowBox[{"N2", "[", "t", "]"}]}]}], ")"}]}]}]}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{
       RowBox[{"M2", "'"}], "[", "t", "]"}], "==", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"M1", "[", "t", "]"}], "*", 
           RowBox[{"M2", "[", "t", "]"}]}], ")"}], "/", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"N1", "[", "t", "]"}], "+", 
           RowBox[{"N2", "[", "t", "]"}]}], ")"}]}], 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"v", " ", "*", 
           RowBox[{"N2", "[", "t", "]"}]}], "-", 
          RowBox[{"N1", "[", "t", "]"}]}], ")"}]}], "-", 
       RowBox[{
        RowBox[{"M2", "[", "t", "]"}], "*", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"1", "-", 
           RowBox[{"M1", "[", "t", "]"}], "-", 
           RowBox[{"M2", "[", "t", "]"}]}], ")"}], "/", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"N1", "[", "t", "]"}], "+", 
           RowBox[{"N2", "[", "t", "]"}]}], ")"}]}], 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"e1", "*", 
           RowBox[{"N1", "[", "t", "]"}]}], "+", 
          RowBox[{"e2", "*", 
           RowBox[{"N2", "[", "t", "]"}]}]}], ")"}]}]}]}]}], "}"}], "/.", 
   "Pars"}]}]}], "Input",
 CellChangeTimes->{{3.901993196254233*^9, 3.90199325499457*^9}, {
   3.9019932965757*^9, 3.9019933547816424`*^9}, {3.901993387943729*^9, 
   3.9019936608980513`*^9}, {3.901993749167962*^9, 3.9019939084113245`*^9}, {
   3.9019939618533278`*^9, 3.9019940672219405`*^9}, {3.902494967718193*^9, 
   3.902494972151692*^9}, 3.907326157089579*^9, {3.907376988270833*^9, 
   3.907376989720865*^9}},
 CellLabel->"In[1]:=",ExpressionUUID->"dceb96e5-1ab9-48d9-8722-c5771acbb582"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    RowBox[{
     SuperscriptBox["N1", "\[Prime]",
      MultilineFunction->None], "[", "t", "]"}], "\[Equal]", 
    RowBox[{
     RowBox[{
      FractionBox["5", "7"], " ", 
      RowBox[{"(", 
       RowBox[{"1", "+", 
        RowBox[{"M1", "[", "t", "]"}], "+", 
        RowBox[{
         FractionBox["1", "2"], " ", 
         RowBox[{"(", 
          RowBox[{"1", "-", 
           RowBox[{"M1", "[", "t", "]"}], "-", 
           RowBox[{"M2", "[", "t", "]"}]}], ")"}]}], "+", 
        FractionBox[
         RowBox[{"9", " ", 
          RowBox[{"M2", "[", "t", "]"}]}], "5"]}], ")"}], " ", 
      RowBox[{"N1", "[", "t", "]"}]}], "-", 
     SuperscriptBox[
      RowBox[{"N1", "[", "t", "]"}], "2"], "-", 
     RowBox[{
      FractionBox["6", "7"], " ", 
      RowBox[{"N1", "[", "t", "]"}], " ", 
      RowBox[{"N2", "[", "t", "]"}]}]}]}], ",", 
   RowBox[{
    RowBox[{
     SuperscriptBox["N2", "\[Prime]",
      MultilineFunction->None], "[", "t", "]"}], "\[Equal]", 
    RowBox[{
     RowBox[{
      RowBox[{"(", 
       RowBox[{"1", "+", 
        FractionBox[
         RowBox[{"2", " ", 
          RowBox[{"M1", "[", "t", "]"}]}], "3"], "+", 
        RowBox[{
         FractionBox["1", "2"], " ", 
         RowBox[{"(", 
          RowBox[{"1", "-", 
           RowBox[{"M1", "[", "t", "]"}], "-", 
           RowBox[{"M2", "[", "t", "]"}]}], ")"}]}], "+", 
        RowBox[{"M2", "[", "t", "]"}]}], ")"}], " ", 
      RowBox[{"N2", "[", "t", "]"}]}], "-", 
     RowBox[{
      RowBox[{"N1", "[", "t", "]"}], " ", 
      RowBox[{"N2", "[", "t", "]"}]}], "-", 
     SuperscriptBox[
      RowBox[{"N2", "[", "t", "]"}], "2"]}]}], ",", 
   RowBox[{
    RowBox[{
     SuperscriptBox["M1", "\[Prime]",
      MultilineFunction->None], "[", "t", "]"}], "\[Equal]", 
    RowBox[{
     FractionBox[
      RowBox[{
       RowBox[{"M1", "[", "t", "]"}], " ", 
       RowBox[{"M2", "[", "t", "]"}], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"N1", "[", "t", "]"}], "-", 
         FractionBox[
          RowBox[{"3", " ", 
           RowBox[{"N2", "[", "t", "]"}]}], "4"]}], ")"}]}], 
      RowBox[{
       RowBox[{"N1", "[", "t", "]"}], "+", 
       RowBox[{"N2", "[", "t", "]"}]}]], "-", 
     FractionBox[
      RowBox[{
       RowBox[{"M1", "[", "t", "]"}], " ", 
       RowBox[{"(", 
        RowBox[{"1", "-", 
         RowBox[{"M1", "[", "t", "]"}], "-", 
         RowBox[{"M2", "[", "t", "]"}]}], ")"}], " ", 
       RowBox[{"(", 
        RowBox[{
         FractionBox[
          RowBox[{"N1", "[", "t", "]"}], "2"], "+", 
         FractionBox[
          RowBox[{"N2", "[", "t", "]"}], "2"]}], ")"}]}], 
      RowBox[{
       RowBox[{"N1", "[", "t", "]"}], "+", 
       RowBox[{"N2", "[", "t", "]"}]}]]}]}], ",", 
   RowBox[{
    RowBox[{
     SuperscriptBox["M2", "\[Prime]",
      MultilineFunction->None], "[", "t", "]"}], "\[Equal]", 
    RowBox[{
     RowBox[{"-", 
      FractionBox[
       RowBox[{
        RowBox[{"(", 
         RowBox[{"1", "-", 
          RowBox[{"M1", "[", "t", "]"}], "-", 
          RowBox[{"M2", "[", "t", "]"}]}], ")"}], " ", 
        RowBox[{"M2", "[", "t", "]"}], " ", 
        RowBox[{"(", 
         RowBox[{
          FractionBox[
           RowBox[{"N1", "[", "t", "]"}], "2"], "+", 
          FractionBox[
           RowBox[{"N2", "[", "t", "]"}], "2"]}], ")"}]}], 
       RowBox[{
        RowBox[{"N1", "[", "t", "]"}], "+", 
        RowBox[{"N2", "[", "t", "]"}]}]]}], "+", 
     FractionBox[
      RowBox[{
       RowBox[{"M1", "[", "t", "]"}], " ", 
       RowBox[{"M2", "[", "t", "]"}], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", 
          RowBox[{"N1", "[", "t", "]"}]}], "+", 
         FractionBox[
          RowBox[{"3", " ", 
           RowBox[{"N2", "[", "t", "]"}]}], "4"]}], ")"}]}], 
      RowBox[{
       RowBox[{"N1", "[", "t", "]"}], "+", 
       RowBox[{"N2", "[", "t", "]"}]}]]}]}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.9019940717912903`*^9, 3.9024949754648976`*^9, {3.902495261722258*^9, 
   3.9024952687367296`*^9}, 3.902495548606328*^9, 3.9037043289968243`*^9, 
   3.9037045893131905`*^9, {3.903704651881111*^9, 3.903704668190113*^9}, 
   3.903704723665724*^9, 3.9037048074899426`*^9, 3.90426011490825*^9, 
   3.90426018775782*^9, 3.9049026101651945`*^9, 3.9073250925232935`*^9, 
   3.9073261617509513`*^9, 3.9073290184044304`*^9, 3.907329303987977*^9, 
   3.907329579531397*^9, 3.9073769909547224`*^9},
 CellLabel->"Out[2]=",ExpressionUUID->"827427c8-1313-4e40-8c56-e4fc4bea6f3a"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Fps", " ", "=", " ", 
  RowBox[{"FullSimplify", "[", 
   RowBox[{"Solve", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"r1", "*", "N1", 
           RowBox[{"(", 
            RowBox[{"1", "+", 
             RowBox[{"a11", "*", "M1"}], "+", 
             RowBox[{"a12", "*", "M2"}], "+", 
             RowBox[{"a13", "*", 
              RowBox[{"(", 
               RowBox[{"1", "-", "M1", "-", "M2"}], ")"}]}]}], ")"}]}], "-", 
          RowBox[{"c11", "*", 
           RowBox[{
            RowBox[{"(", "N1", ")"}], "^", "2"}]}], "-", 
          RowBox[{"c12", "*", "N1", "*", "N2"}]}], " ", "==", " ", "0"}], ",",
         " ", 
        RowBox[{
         RowBox[{
          RowBox[{"r2", "*", "N2", 
           RowBox[{"(", 
            RowBox[{"1", "+", 
             RowBox[{"a21", " ", "*", "M1"}], "+", 
             RowBox[{"a22", "*", "M2"}], "+", 
             RowBox[{"a23", 
              RowBox[{"(", 
               RowBox[{"1", "-", "M1", "-", "M2"}], ")"}]}]}], ")"}]}], "-", 
          RowBox[{"c22", "*", 
           RowBox[{
            RowBox[{"(", "N2", ")"}], "^", "2"}]}], "-", 
          RowBox[{"c21", "*", "N1", "*", "N2"}]}], "==", "0"}], ",", " ", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{"(", 
             RowBox[{"M1", "*", "M2"}], ")"}], "/", 
            RowBox[{"(", 
             RowBox[{"N1", "+", "N2"}], ")"}]}], 
           RowBox[{"(", 
            RowBox[{"N1", "-", 
             RowBox[{"v", "*", "N2"}]}], ")"}]}], "-", 
          RowBox[{"M1", "*", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{"1", "-", "M1", "-", "M2"}], ")"}], "/", 
            RowBox[{"(", 
             RowBox[{"N1", "+", "N2"}], ")"}]}], 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"e1", "*", "N1"}], "+", 
             RowBox[{"e2", "*", "N2"}]}], ")"}]}]}], " ", "==", " ", "0"}], 
        ",", " ", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{"(", 
             RowBox[{"M1", "*", "M2"}], ")"}], "/", 
            RowBox[{"(", 
             RowBox[{"N1", "+", "N2"}], ")"}]}], 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"v", " ", "*", "N2"}], "-", "N1"}], ")"}]}], "-", 
          RowBox[{"M2", "*", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{"1", "-", "M1", "-", "M2"}], ")"}], "/", 
            RowBox[{"(", 
             RowBox[{"N1", "+", "N2"}], ")"}]}], 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"e1", "*", "N1"}], "+", 
             RowBox[{"e2", "*", "N2"}]}], ")"}]}]}], "==", "0"}]}], "}"}], "/.",
       " ", "Pars"}], ",", " ", 
     RowBox[{"{", 
      RowBox[{"N1", ",", " ", "N2", ",", " ", "M1", ",", " ", "M2"}], "}"}]}],
     "]"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.904902549986418*^9, 3.9049025979521775`*^9}, {
  3.904902628389817*^9, 3.904902799106761*^9}, {3.904902831868289*^9, 
  3.9049028334958925`*^9}, {3.9049028887407026`*^9, 3.9049028911719217`*^9}, {
  3.904906558011613*^9, 3.9049065619959803`*^9}},
 CellLabel->"In[3]:=",ExpressionUUID->"555896d3-a623-4c16-b93d-97908c5b5f86"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"N1", "\[Rule]", 
      RowBox[{"-", 
       FractionBox["3", "2"]}]}], ",", 
     RowBox[{"N2", "\[Rule]", "3"}], ",", 
     RowBox[{"M1", "\[Rule]", "0"}], ",", 
     RowBox[{"M2", "\[Rule]", "0"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"N1", "\[Rule]", "0"}], ",", 
     RowBox[{"N2", "\[Rule]", 
      FractionBox["23", "18"]}], ",", 
     RowBox[{"M1", "\[Rule]", 
      FractionBox["2", "3"]}], ",", 
     RowBox[{"M2", "\[Rule]", 
      RowBox[{"-", 
       FractionBox["2", "3"]}]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"N1", "\[Rule]", "0"}], ",", 
     RowBox[{"N2", "\[Rule]", 
      FractionBox["3", "2"]}], ",", 
     RowBox[{"M1", "\[Rule]", "0"}], ",", 
     RowBox[{"M2", "\[Rule]", "0"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"N1", "\[Rule]", "0"}], ",", 
     RowBox[{"N2", "\[Rule]", 
      FractionBox["5", "3"]}], ",", 
     RowBox[{"M1", "\[Rule]", "1"}], ",", 
     RowBox[{"M2", "\[Rule]", "0"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"N1", "\[Rule]", "0"}], ",", 
     RowBox[{"N2", "\[Rule]", "2"}], ",", 
     RowBox[{"M1", "\[Rule]", "0"}], ",", 
     RowBox[{"M2", "\[Rule]", "1"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"N1", "\[Rule]", 
      FractionBox["10", "13"]}], ",", 
     RowBox[{"N2", "\[Rule]", 
      FractionBox["40", "39"]}], ",", 
     RowBox[{"M1", "\[Rule]", 
      FractionBox["8", "13"]}], ",", 
     RowBox[{"M2", "\[Rule]", 
      FractionBox["5", "13"]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"N1", "\[Rule]", 
      FractionBox["15", "14"]}], ",", 
     RowBox[{"N2", "\[Rule]", "0"}], ",", 
     RowBox[{"M1", "\[Rule]", "0"}], ",", 
     RowBox[{"M2", "\[Rule]", "0"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"N1", "\[Rule]", "2"}], ",", 
     RowBox[{"N2", "\[Rule]", "0"}], ",", 
     RowBox[{"M1", "\[Rule]", "0"}], ",", 
     RowBox[{"M2", "\[Rule]", "1"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"N1", "\[Rule]", 
      RowBox[{
       FractionBox["1", "78"], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "23"}], "-", 
         RowBox[{"2", " ", 
          SqrtBox["3613"]}]}], ")"}]}]}], ",", 
     RowBox[{"N2", "\[Rule]", 
      RowBox[{
       FractionBox["1", "234"], " ", 
       RowBox[{"(", 
        RowBox[{"467", "+", 
         RowBox[{"5", " ", 
          SqrtBox["3613"]}]}], ")"}]}]}], ",", 
     RowBox[{"M1", "\[Rule]", 
      RowBox[{
       FractionBox["1", "78"], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "47"}], "+", 
         SqrtBox["3613"]}], ")"}]}]}], ",", 
     RowBox[{"M2", "\[Rule]", 
      RowBox[{
       FractionBox["1", "78"], " ", 
       RowBox[{"(", 
        RowBox[{"47", "-", 
         SqrtBox["3613"]}], ")"}]}]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"N1", "\[Rule]", 
      RowBox[{
       FractionBox["1", "78"], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "23"}], "+", 
         RowBox[{"2", " ", 
          SqrtBox["3613"]}]}], ")"}]}]}], ",", 
     RowBox[{"N2", "\[Rule]", 
      RowBox[{
       FractionBox["1", "234"], " ", 
       RowBox[{"(", 
        RowBox[{"467", "-", 
         RowBox[{"5", " ", 
          SqrtBox["3613"]}]}], ")"}]}]}], ",", 
     RowBox[{"M1", "\[Rule]", 
      RowBox[{
       FractionBox["1", "78"], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "47"}], "-", 
         SqrtBox["3613"]}], ")"}]}]}], ",", 
     RowBox[{"M2", "\[Rule]", 
      RowBox[{
       FractionBox["1", "78"], " ", 
       RowBox[{"(", 
        RowBox[{"47", "+", 
         SqrtBox["3613"]}], ")"}]}]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"N1", "\[Rule]", 
      FractionBox["19", "14"]}], ",", 
     RowBox[{"N2", "\[Rule]", "0"}], ",", 
     RowBox[{"M1", "\[Rule]", 
      RowBox[{"-", 
       FractionBox["1", "2"]}]}], ",", 
     RowBox[{"M2", "\[Rule]", 
      FractionBox["1", "2"]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"N1", "\[Rule]", 
      FractionBox["10", "7"]}], ",", 
     RowBox[{"N2", "\[Rule]", "0"}], ",", 
     RowBox[{"M1", "\[Rule]", "1"}], ",", 
     RowBox[{"M2", "\[Rule]", "0"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"N1", "\[Rule]", "2"}], ",", 
     RowBox[{"N2", "\[Rule]", "0"}], ",", 
     RowBox[{"M1", "\[Rule]", "0"}], ",", 
     RowBox[{"M2", "\[Rule]", "1"}]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{{3.9049026050495596`*^9, 3.90490263839814*^9}, {
   3.9049028291462708`*^9, 3.904902835195606*^9}, {3.9049065527871637`*^9, 
   3.904906562819279*^9}, 3.9073293072325144`*^9, 3.907376994765707*^9},
 CellLabel->"Out[3]=",ExpressionUUID->"b47ebcf2-af59-4001-8a2c-337b8cc5f589"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"s", "=", 
   RowBox[{"NDSolve", "[", 
    RowBox[{
     RowBox[{"Union", "[", 
      RowBox[{"System", ",", " ", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{
          RowBox[{"N1", "[", "0", "]"}], "==", 
          RowBox[{"3", "/", "4"}]}], ",", " ", 
         RowBox[{
          RowBox[{"N2", "[", "0", "]"}], "==", 
          RowBox[{"1", "/", "2"}]}], ",", " ", 
         RowBox[{
          RowBox[{"M1", "[", "0", "]"}], "==", "0.33"}], ",", " ", 
         RowBox[{
          RowBox[{"M2", "[", "0", "]"}], "==", "0.665"}]}], "}"}]}], "]"}], 
     ",", " ", 
     RowBox[{"{", 
      RowBox[{"N1", ",", " ", "N2", ",", " ", "M1", ",", " ", "M2"}], "}"}], 
     ",", " ", 
     RowBox[{"{", 
      RowBox[{"t", ",", " ", "0", ",", " ", "1000"}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"Evaluate", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"N1", "[", "t", "]"}], ",", " ", 
       RowBox[{"N2", "[", "t", "]"}], ",", " ", 
       RowBox[{"M1", "[", "t", "]"}], ",", " ", 
       RowBox[{"M2", "[", "t", "]"}], ",", " ", 
       RowBox[{"1", "-", " ", 
        RowBox[{"M1", "[", "t", "]"}], " ", "-", " ", 
        RowBox[{"M2", "[", "t", "]"}]}]}], "}"}], "/.", " ", "s"}], "]"}], 
   ",", " ", 
   RowBox[{"{", 
    RowBox[{"t", ",", "0", ",", "30"}], "}"}], ",", 
   RowBox[{"PlotRange", " ", "->", " ", "All"}], ",", " ", 
   RowBox[{"PlotLegends", "->", 
    RowBox[{"{", 
     RowBox[{
     "\"\<N1\>\"", ",", " ", "\"\<N2\>\"", ",", " ", "\"\<M1\>\"", ",", " ", 
      "\"\<M2\>\"", ",", " ", "\"\<M3\>\""}], "}"}]}], ",", 
   RowBox[{"AxesLabel", "->", 
    RowBox[{"{", 
     RowBox[{"\"\<time\>\"", ",", " ", "\"\<concentration\>\""}], "}"}]}]}], 
  "]"}]}], "Input",
 CellChangeTimes->{{3.9024947733516216`*^9, 3.9024948991680074`*^9}, {
  3.902494937529293*^9, 3.902494954418378*^9}, {3.9024955425938654`*^9, 
  3.9024955433370075`*^9}, {3.9024960190814686`*^9, 3.902496053305091*^9}, {
  3.902496094615567*^9, 3.9024960979659433`*^9}, {3.9037047149696627`*^9, 
  3.903704718949719*^9}, {3.9037047950305185`*^9, 3.9037048045175695`*^9}, {
  3.9073261756618304`*^9, 3.9073262564096107`*^9}, {3.9073291474257545`*^9, 
  3.907329147544757*^9}, {3.9073295676703024`*^9, 3.907329571102964*^9}},
 CellLabel->"In[4]:=",ExpressionUUID->"b5138355-e3d5-423f-9041-26e7257d1612"],

Cell[BoxData[
 TemplateBox[{
   GraphicsBox[{{{{}, {}, 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
fn0dQ+/Pj7R0a1Lg/wCaG6pb
          "]]}, Annotation[#, "Charting`Private`Tag$4617#1"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.880722, 0.611041, 0.142051], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
          "]]}, Annotation[#, "Charting`Private`Tag$4617#1"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.560181, 0.691569, 0.194885], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
aFmgxokZ/gceuCf7
          "]]}, Annotation[#, "Charting`Private`Tag$4617#1"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.922526, 0.385626, 0.209179], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
bYpJ055kF3jXzKyssLDvRqv8tMQk+3/X4MK3
          "]]}, Annotation[#, "Charting`Private`Tag$4617#1"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.528488, 0.470624, 0.701351], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
x2dn2XjGRn87h/h/JVvBlw==
          "]]}, Annotation[#, "Charting`Private`Tag$4617#1"]& ]}}, {}}, {
    DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
     AxesOrigin -> {0, 0}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, DisplayFunction -> Identity, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
     DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {
       FormBox[
        TagBox["\"time\"", HoldForm], TraditionalForm], 
       FormBox[
        TagBox["\"concentration\"", HoldForm], TraditionalForm]}, 
     AxesOrigin -> {0, 0}, DisplayFunction :> Identity, 
     Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, 
       "DefaultGraphicsInteraction" -> {
        "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
         "Effects" -> {
          "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
           "Droplines" -> {
            "freeformCursorMode" -> True, 
             "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
       "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> None,
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}}, PlotRange -> {All, All}, PlotRangeClipping -> 
     True, PlotRangePadding -> {{Automatic, Automatic}, {
       Automatic, Automatic}}, Ticks -> {Automatic, Automatic}}], 
   FormBox[
    FormBox[
     TemplateBox[{"\"N1\"", "\"N2\"", "\"M1\"", "\"M2\"", "\"M3\""}, 
      "LineLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #5}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.368417, 0.506779, 0.709798]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.880722, 0.611041, 0.142051]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.560181, 0.691569, 0.194885]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.922526, 0.385626, 0.209179]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.528488, 0.470624, 0.701351]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3, ",", #4, ",", #5}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.9024949767880287`*^9, {3.9024952620233793`*^9, 3.902495268959196*^9}, 
   3.9024955487601786`*^9, {3.9024960314039907`*^9, 3.902496060385322*^9}, 
   3.902496098791027*^9, 3.90370432918486*^9, 3.9037045893934727`*^9, {
   3.9037046519471426`*^9, 3.903704668254702*^9}, 3.90370472369773*^9, 
   3.903704807602522*^9, 3.904260115159167*^9, 3.90426018784669*^9, 
   3.907325099703044*^9, {3.9073261672964077`*^9, 3.9073262571479855`*^9}, {
   3.907329571966608*^9, 3.9073295834061127`*^9}, 3.9073769989565773`*^9},
 CellLabel->"Out[5]=",ExpressionUUID->"303f385e-476c-45d0-935a-8715837da33e"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"Pars", " ", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"r1", "->", 
      RowBox[{"5", "/", "7"}]}], ",", 
     RowBox[{"r2", "->", "1"}], ",", 
     RowBox[{"a11", "->", "1"}], ",", 
     RowBox[{"a12", "->", 
      RowBox[{"9", "/", "5"}]}], ",", 
     RowBox[{"a21", "->", 
      RowBox[{"2", "/", "3"}]}], ",", 
     RowBox[{"a22", "->", "1"}], ",", 
     RowBox[{"c11", "\[Rule]", "1"}], ",", 
     RowBox[{"c12", "\[Rule]", 
      RowBox[{"6", "/", "7"}]}], ",", 
     RowBox[{"c21", "\[Rule]", "1"}], ",", 
     RowBox[{"c22", "\[Rule]", "1"}], ",", 
     RowBox[{"v", "->", 
      RowBox[{"3", "/", "4"}]}], ",", 
     RowBox[{"a13", "->", "0"}], ",", 
     RowBox[{"a23", "->", "0"}], ",", 
     RowBox[{"e1", "->", "0"}], ",", 
     RowBox[{"e2", "->", "0"}]}], "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"System", "=", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"N1", "'"}], "[", "t", "]"}], "==", 
      RowBox[{
       RowBox[{"r1", "*", 
        RowBox[{"N1", "[", "t", "]"}], 
        RowBox[{"(", 
         RowBox[{"1", "+", 
          RowBox[{"a11", "*", 
           RowBox[{"M1", "[", "t", "]"}]}], "+", 
          RowBox[{"a12", "*", 
           RowBox[{"M2", "[", "t", "]"}]}], "+", 
          RowBox[{"a13", "*", 
           RowBox[{"(", 
            RowBox[{"1", "-", 
             RowBox[{"M1", "[", "t", "]"}], "-", 
             RowBox[{"M2", "[", "t", "]"}]}], ")"}]}]}], ")"}]}], "-", 
       RowBox[{"c11", "*", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"N1", "[", "t", "]"}], ")"}], "^", "2"}]}], "-", 
       RowBox[{"c12", "*", 
        RowBox[{"N1", "[", "t", "]"}], "*", 
        RowBox[{"N2", "[", "t", "]"}]}]}]}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{
       RowBox[{"N2", "'"}], "[", "t", "]"}], "==", 
      RowBox[{
       RowBox[{"r2", "*", 
        RowBox[{"N2", "[", "t", "]"}], 
        RowBox[{"(", 
         RowBox[{"1", "+", 
          RowBox[{"a21", " ", "*", 
           RowBox[{"M1", "[", "t", "]"}]}], "+", 
          RowBox[{"a22", "*", 
           RowBox[{"M2", "[", "t", "]"}]}], "+", 
          RowBox[{"a23", 
           RowBox[{"(", 
            RowBox[{"1", "-", 
             RowBox[{"M1", "[", "t", "]"}], "-", 
             RowBox[{"M2", "[", "t", "]"}]}], ")"}]}]}], ")"}]}], "-", 
       RowBox[{"c22", "*", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"N2", "[", "t", "]"}], ")"}], "^", "2"}]}], "-", 
       RowBox[{"c21", "*", 
        RowBox[{"N1", "[", "t", "]"}], "*", 
        RowBox[{"N2", "[", "t", "]"}]}]}]}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{
       RowBox[{"M1", "'"}], "[", "t", "]"}], "==", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"M1", "[", "t", "]"}], "*", 
           RowBox[{"M2", "[", "t", "]"}]}], ")"}], "/", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"N1", "[", "t", "]"}], "+", 
           RowBox[{"N2", "[", "t", "]"}]}], ")"}]}], 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"N1", "[", "t", "]"}], "-", 
          RowBox[{"v", "*", 
           RowBox[{"N2", "[", "t", "]"}]}]}], ")"}]}], "-", 
       RowBox[{
        RowBox[{"M1", "[", "t", "]"}], "*", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"1", "-", 
           RowBox[{"M1", "[", "t", "]"}], "-", 
           RowBox[{"M2", "[", "t", "]"}]}], ")"}], "/", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"N1", "[", "t", "]"}], "+", 
           RowBox[{"N2", "[", "t", "]"}]}], ")"}]}], 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"e1", "*", 
           RowBox[{"N1", "[", "t", "]"}]}], "+", 
          RowBox[{"e2", "*", 
           RowBox[{"N2", "[", "t", "]"}]}]}], ")"}]}]}]}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{
       RowBox[{"M2", "'"}], "[", "t", "]"}], "==", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"M1", "[", "t", "]"}], "*", 
           RowBox[{"M2", "[", "t", "]"}]}], ")"}], "/", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"N1", "[", "t", "]"}], "+", 
           RowBox[{"N2", "[", "t", "]"}]}], ")"}]}], 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"v", " ", "*", 
           RowBox[{"N2", "[", "t", "]"}]}], "-", 
          RowBox[{"N1", "[", "t", "]"}]}], ")"}]}], "-", 
       RowBox[{
        RowBox[{"M2", "[", "t", "]"}], "*", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"1", "-", 
           RowBox[{"M1", "[", "t", "]"}], "-", 
           RowBox[{"M2", "[", "t", "]"}]}], ")"}], "/", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"N1", "[", "t", "]"}], "+", 
           RowBox[{"N2", "[", "t", "]"}]}], ")"}]}], 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"e1", "*", 
           RowBox[{"N1", "[", "t", "]"}]}], "+", 
          RowBox[{"e2", "*", 
           RowBox[{"N2", "[", "t", "]"}]}]}], ")"}]}]}]}]}], "}"}], "/.", 
   "Pars"}]}]}], "Input",
 CellChangeTimes->{{3.903704475197307*^9, 3.9037044881049213`*^9}, {
  3.9037045807364883`*^9, 3.90370458149938*^9}},
 CellLabel->"In[6]:=",ExpressionUUID->"c5e3208b-b00a-4496-8369-496d720eca88"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    RowBox[{
     SuperscriptBox["N1", "\[Prime]",
      MultilineFunction->None], "[", "t", "]"}], "\[Equal]", 
    RowBox[{
     RowBox[{
      FractionBox["5", "7"], " ", 
      RowBox[{"(", 
       RowBox[{"1", "+", 
        RowBox[{"M1", "[", "t", "]"}], "+", 
        FractionBox[
         RowBox[{"9", " ", 
          RowBox[{"M2", "[", "t", "]"}]}], "5"]}], ")"}], " ", 
      RowBox[{"N1", "[", "t", "]"}]}], "-", 
     SuperscriptBox[
      RowBox[{"N1", "[", "t", "]"}], "2"], "-", 
     RowBox[{
      FractionBox["6", "7"], " ", 
      RowBox[{"N1", "[", "t", "]"}], " ", 
      RowBox[{"N2", "[", "t", "]"}]}]}]}], ",", 
   RowBox[{
    RowBox[{
     SuperscriptBox["N2", "\[Prime]",
      MultilineFunction->None], "[", "t", "]"}], "\[Equal]", 
    RowBox[{
     RowBox[{
      RowBox[{"(", 
       RowBox[{"1", "+", 
        FractionBox[
         RowBox[{"2", " ", 
          RowBox[{"M1", "[", "t", "]"}]}], "3"], "+", 
        RowBox[{"M2", "[", "t", "]"}]}], ")"}], " ", 
      RowBox[{"N2", "[", "t", "]"}]}], "-", 
     RowBox[{
      RowBox[{"N1", "[", "t", "]"}], " ", 
      RowBox[{"N2", "[", "t", "]"}]}], "-", 
     SuperscriptBox[
      RowBox[{"N2", "[", "t", "]"}], "2"]}]}], ",", 
   RowBox[{
    RowBox[{
     SuperscriptBox["M1", "\[Prime]",
      MultilineFunction->None], "[", "t", "]"}], "\[Equal]", 
    FractionBox[
     RowBox[{
      RowBox[{"M1", "[", "t", "]"}], " ", 
      RowBox[{"M2", "[", "t", "]"}], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"N1", "[", "t", "]"}], "-", 
        FractionBox[
         RowBox[{"3", " ", 
          RowBox[{"N2", "[", "t", "]"}]}], "4"]}], ")"}]}], 
     RowBox[{
      RowBox[{"N1", "[", "t", "]"}], "+", 
      RowBox[{"N2", "[", "t", "]"}]}]]}], ",", 
   RowBox[{
    RowBox[{
     SuperscriptBox["M2", "\[Prime]",
      MultilineFunction->None], "[", "t", "]"}], "\[Equal]", 
    FractionBox[
     RowBox[{
      RowBox[{"M1", "[", "t", "]"}], " ", 
      RowBox[{"M2", "[", "t", "]"}], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", 
         RowBox[{"N1", "[", "t", "]"}]}], "+", 
        FractionBox[
         RowBox[{"3", " ", 
          RowBox[{"N2", "[", "t", "]"}]}], "4"]}], ")"}]}], 
     RowBox[{
      RowBox[{"N1", "[", "t", "]"}], "+", 
      RowBox[{"N2", "[", "t", "]"}]}]]}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.903704493983968*^9, {3.903704582137134*^9, 3.9037045895509224`*^9}, {
   3.9037046520998273`*^9, 3.9037046683514776`*^9}, 3.9037047238176146`*^9, 
   3.9037048078115067`*^9, 3.9042601155205984`*^9, 3.9042601879152346`*^9, 
   3.907329345180684*^9, 3.9073295973420467`*^9, 3.9073770033593884`*^9},
 CellLabel->"Out[7]=",ExpressionUUID->"790cd92e-aa0f-4b15-addb-438b006b671f"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"s", "=", 
   RowBox[{"NDSolve", "[", 
    RowBox[{
     RowBox[{"Union", "[", 
      RowBox[{"System", ",", " ", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{
          RowBox[{"N1", "[", "0", "]"}], "==", 
          RowBox[{"3", "/", "4"}]}], ",", " ", 
         RowBox[{
          RowBox[{"N2", "[", "0", "]"}], "==", 
          RowBox[{"1", "/", "2"}]}], ",", " ", 
         RowBox[{
          RowBox[{"M1", "[", "0", "]"}], "==", "0.3"}], ",", " ", 
         RowBox[{
          RowBox[{"M2", "[", "0", "]"}], "==", "0.69"}]}], "}"}]}], "]"}], 
     ",", " ", 
     RowBox[{"{", 
      RowBox[{"N1", ",", " ", "N2", ",", " ", "M1", ",", " ", "M2"}], "}"}], 
     ",", " ", 
     RowBox[{"{", 
      RowBox[{"t", ",", " ", "0", ",", " ", "1000"}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"Evaluate", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"N1", "[", "t", "]"}], ",", " ", 
       RowBox[{"N2", "[", "t", "]"}], ",", " ", 
       RowBox[{"M1", "[", "t", "]"}], ",", " ", 
       RowBox[{"M2", "[", "t", "]"}], ",", " ", 
       RowBox[{"1", " ", "-", " ", 
        RowBox[{"M1", "[", "t", "]"}], " ", "-", " ", 
        RowBox[{"M2", "[", "t", "]"}]}]}], "}"}], "/.", " ", "s"}], "]"}], 
   ",", " ", 
   RowBox[{"{", 
    RowBox[{"t", ",", "0", ",", "120"}], "}"}], ",", 
   RowBox[{"PlotRange", " ", "->", " ", 
    RowBox[{"{", 
     RowBox[{"0", ",", "1.2"}], "}"}]}], ",", " ", 
   RowBox[{"PlotLegends", "->", 
    RowBox[{"{", 
     RowBox[{
     "\"\<N1\>\"", ",", " ", "\"\<N2\>\"", ",", " ", "\"\<M1\>\"", ",", " ", 
      "\"\<M2\>\"", ",", " ", "\"\<M3\>\""}], "}"}]}], ",", " ", 
   RowBox[{"AxesLabel", "->", 
    RowBox[{"{", 
     RowBox[{"\"\<time\>\"", ",", " ", "\"\<concentration\>\""}], "}"}]}]}], 
  "]"}]}], "Input",
 CellChangeTimes->{{3.9037045077753797`*^9, 3.9037045155313787`*^9}, {
  3.9037046368965592`*^9, 3.9037046821616077`*^9}, {3.9073292683885994`*^9, 
  3.90732927655989*^9}, {3.907329359534154*^9, 3.907329404005303*^9}, {
  3.907329457452788*^9, 3.9073294940618377`*^9}, {3.907329524441904*^9, 
  3.907329545306961*^9}, {3.907329623699605*^9, 3.907329786478222*^9}, {
  3.9073770186548357`*^9, 3.907377042078497*^9}},
 CellLabel->"In[10]:=",ExpressionUUID->"d2600bda-9f35-4116-8747-14715176dba4"],

Cell[BoxData[
 TemplateBox[{
   GraphicsBox[{{{{}, {}, 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
LyILeMeOoyWjZztf11mB15+//cbh48jVhW/w8ogV+Ms86v/kOY62pTyw09W1
ho5doRMWhuPoXvn9V78MrCH064UV1z3jaHd3qW49soa8sSWRUP1xRJYu3kaw
sIbyZzZORTrjKO1ZPt3e3Rq89yc7mKiOo9+zmfFBCdjB0ASS4yhl88U59WRr
qNpzh54lMY7zL8N3PtUafooKKzK2jSPN1PPW0VesQUDwocCtLeMoQO6M2Lli
a8g5r5RuKjSO+lzCK+60WcPuWusY8vpx5BcfJuPXaQ3Fsf7qDM5x9LMo9KpS
L55f2dzmhLXjaNN8YEzVkDW4N5w628A+jiwzfPY3zFuD+FW3uZA/Y6j3kXfd
mV/W8DVNjyr/ewz59h9UNV+xhppt79mHfo2hBIUDwm3rbSDeK3vFa3EM1TQ6
DfaL28DlvHV9136MITMGmXRzhw0cSNijGsYaQ10CpCYvWRswNc1rJM6OoVl3
2zKGig2oavmVC0+PIYVF8xOLYANndivkdzLGUI6SvqDQYRvg/zC0V2J4DDla
fbj4/IgNfN8kqI2GxtCmIwc3BoTawMAbFbNDg2Mo9d65TS9P2kBu/tW62oEx
FLurTzgkzQb2KT+fzOkfQ3ssgq+IZ9rAgnz2s76+MbTkxyHadMUGqs8p3JXE
PlqsuHn7TRsYNPzc+rR3DB3aGb2ltdIGLFSLiOKfx5CUuUBuRDV+//ymmZju
MTTge1tcus4G0jl1imldY8i5qHXrydc28Lp72au+cwwJN3lcl23G48d89FbH
bh+d29b+wQbe7KmLvvtpDFnKbZPY2WMDxmU7Zgo6xtB604q8T/02gBLCLOSw
Xx8i7IgdtIENkkVPy9rH0L47gZLdDBtwa+DrfPtxDGnI1Euf+WMDMqeDR1Xb
xtC0sf1tVXYiDO9T6/r0YQzd8xqV6eMkQm6f7KcobNlbfHIaAkQg5G9Y+vx+
DA29LCj8KkSEAwQliVTsvCEd+RQxIryq/Wprgi0mdWDndyki+Ao4fHrROoa6
4cfd8/JEuMClK5WIneWZpKCrRISw6MZIa2xivHjJkBoRhgw/dolhb8gv35Wu
TYRyOW09RssYevfC+N5ufSKUcjXfqMdO/P5ZccQQ+5nP+qvYRqsBpReMiRC7
eTgsDHtFYlVpjzkRlqZFvjtg1+27VDZmRQRL/s+WetgnDuxUybIjwsznT492
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
Oy+odmF1FedL+cpVOez/AbNsfVQ=
          "]]}, Annotation[#, "Charting`Private`Tag$5118#1"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.880722, 0.611041, 0.142051], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
O8vWDGT4KX76kDU2b732qoURGcq2Tg4HYhMFOpkkMzJwmwnRy7G7mtZ/87cn
g8aHZnuJLJyvwXa9cyQyFKwV2GphC0rkd5x0JoO8/69SO2ynUK13Z9zIsEf6
3LEE7EGZgMoMPzJcP02HUew/HbVlQkfJ0J6QLfEbW+IsW+GNY2TQ9k0mbcrG
/asnL6foBBl0VzsHNLDPxU1n7jlFBhEvj13m2PlKmmmVYWR48rPky0Hs4cTP
sc+iydDYOagfg71OTeL0/rN4PanbVi9jSw/5h72JIcPy8KJEAbaPJmtAWwIZ
5Op9Q19hJ47a+NhdIMNTZmxFG3ZJ+k2P3hQyqMhrmAxiUybVHYbTyfD57o7M
eWzO7Dhr30wcH9MHJmvYu1G76Uw2GdxC4sjcV3D8f4obBl8jwyH7tjZB7ICc
I/oLuWSwtnhxexv2RaPHmlE3ySDNkt+5C/sBjUV19RYZXE1f+qpgf7pprRBf
QAYjPm+yNjbV9IYsZyEZlC37KxD25oXJ7ZeKyRAw5etNwFYp2CfOX0aGSAv7
aCtsolWsYM49MvjXjTPtsEN+t/FKVJBBYl/wJyfsrCIxrjtVZNAUN+Y+iF1D
9GOTqyGDU8+Tcg/srr81/+49JsPwB+EHh7AXytaW9j4lQ6ZO7RYf7EknQkHK
czKIxfC/9sXuX3/JbKwef58zbcoP+2NNF13/FRkGNvokH8Gu9xK/fq2RDKqN
Xwv+9wPeQwb0N2SgHlRX+9/5L0qnzd+R4Tb/E/3/v58RQM0sfE+Gzj+Vjf+/
77yohu6/Dzh/toe8Oowd2nx61KkNvz/BQtML2y/0TWp1OxlC96budsd2keba
x/0Fn9eumKvk/8+jw/ardxcZUuXCzjpi6567Fv+yB9fX3ufDRGxFxe8KIv1k
yO6402CJvW1wZ/eJQRy/5kTx/+PLlxxw5uM3Muh/rmf8H39WzYcyMj/IQCm7
YaLzf3zGltrOjpDBYEuUsBp2H0qUVJ0kQ82zeBVp7Ja51nepU2TIfeceLYZd
d5M/aHyGDIal2YZ8/+9/6farHBpej8RZ2784nzKKJ/0YDBz/jxNXGNjnHZQ2
Wy6Qwfi3kOsktm9VnefqbzK8LXH0bcdWPNLD4svqCrLz0qm52NuEJMpfrXcF
sfCs/hRsvqbDdqIbXOHCvonyaOz5bfQ7rRtd4YXd915X7LpebiM1IVdw+lfr
K4T9IMHu50URVwhfP9rL+n+9qeVmT4i5wq9Vi3Yarte4dNnx3G2uUGORY9eC
bUaAxLVdrjDtFVJ7Clt3IUmJLO8KYW1MX3dsxbufemoUXYGf1+I2AXvzqquc
n6orUESsH4pg9z4Je9+m6wqz22I8H+N+4y17n+uGtSuo8vLY9+P+Ff3OI0CO
6ArnZPqdnmFn+PK31ti7QiL774Ec7BfFUWmtzq6wR7/N3RFbUM5s879DrqBS
uXL84//9U25C0CvcFW7ybrO4hfvtt+bcsNlIV3DIrUkIw2b6WfVGnnaFucOp
ZtbY20sf5WTGuoJ63VrQH9y/I3edF29KdQWd4xOW9tjyu7fvkLuNv3/7yewM
vg+gpTO25o4rnMpaEnyB7eSfNHKgyBXUyKc607Djy+buOpe7QkuWFZ8S9rfd
L2RTHuH4885X+Kfi39N7yAqz711BQiRQ5hO+nxjy2Zo1dFeIEim5T8T3W38b
mAjMu0KPQMy8GHZjENUhdNEVYliEF0fxfZheYx6iueIKevY2u0Ox5XVZHtSx
HYSCY7cOZ+P79LD5cakm4YMgcp309h2+f7uPmPJ06x+EzyfEVNbO4vuw6M/I
YvJBOCvcMTGL5wFX452gt80Nql3Txsx86ehfNydv0w432KxZrr0Ou8CX+tVi
pxs4sRXefe6D+0HS8wjX3W5wfZHvmTz2yQ+2VVFqbuAnxftvkzeeB2zObHtG
cIO5AavMATwP1bn0/FUPdoNKJYOFFDwvuU/XfXwR4gbdn2ssCNgs0QW5xqFu
oJ5p1MaKTbh5TJ0U5QZM95cOZw7ieez7usBT8W4gFjp4IQTPXzOHlb8+zHGD
s77XhH3x/Lb1+IXnyo1uoKT0YzmUhOOz5qdx8Y0baOaIsepjs2YRHlLeuoGG
dCmwYc/UspcXfHAD2aAjh7Mc8PpYEnL5u9xgnaSu8SN7HI8rsRG/JtzgUZnb
9zU8L+bWR2m82ugOM5sTt763piMeG/JDcV53EEtrrbmKHTusrRTB5w6+2RfS
fLD92X/LqAi5A0fWQ042bC3bcMG729xhJVxI0QjPo72jJ+cTVd2hpfCiTwee
V4W4Ax9aO7tDSkFP2g487xYZnY2mk92BZc9N23lTOlI7m26U7eYO3Y304GZs
G3p1T/8hd5i6du3jceyk3sVl70B3eCncS28k0NHvuzGG0XHuIBXioRNlgv//
LWOjZII72GZ8+mWHLSh8t7shyR3Y/wkKK2CrpLz1Y09zh9Jj/KeHjOnoaDDX
xYxr7pAjuTpijj2ol91Vct8dvF34bfcZ4f2FFeWZV7pDp277AX7sX5VPfGer
3cFDn5bFMKQjfun+JdVad9CPWPB/iG3JKSnxstEdRN8Jd2hgDxooT3g2uUPk
dQ6KCLb/aVTJ2uwOBlFnvVcM6CiBegjMWt2BuE7mUiP2i+4Sn64ed7DRDC2y
w7bgfaYU3u8OKl7VU5rY/aYffol+xe8veJslgb1Q9zPZY9gdxvlvi04Dno/v
qFRMz7jD1YtoNgn7xaBBeNoc3n+lj1cwtoWgA9pLd4eCV+90XbD9LoR9CV10
h7MgJa2AvdCYdEPktztUcXHvFcI+v5LjXbfiDq7+vHfXEO636uWK7v/cISxZ
9vQMdv7xusW1NXzeVwl1Pdj/ATz3NFI=
          "]]}, Annotation[#, "Charting`Private`Tag$5118#1"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.560181, 0.691569, 0.194885], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1:eJwV13k8lF8XAHChooTs2cqeJftStnvsGftgBkOkpJBUQlFUkvyQIqSsSaRV
payJFiKFkhjLbGKsZUsL733/8vl+ZuY+zz33nHMPucAjxCBODg6Oh1wcHP//
uzjU9lrxv9fmNyTje/X0etDnAomTFn0lqMHj/myNVw8C0Y+BEn1VyMGhVe7g
mR4U5Xr3K1dfMyJGhd0we9+DNk+LX13+2o1MKvSsuvZ9RsP1zkfmv9LRswCd
4rKCL8hWkT344+tPlP7T065Bpw8tfzW6NvuVE6z2R5yarRxEL3R5Au6ocsG1
9mXqPuogikrrU9sTywWMD0fMvvENoZ+WJ5vaZblB9uzeiNeHhxD7fu1EWdBa
uPgzufeE1jCinjez9JtbDwfEV0Yveo2gJi2rmTb+TTCQ46sw2kVDZ1KEaxMC
NoHFoXqFn2M0ZMpiJBpVbQIZj+lg9ioN1eQlSt725AcxhfnL+TvoqGrtW5uE
mwLw8Hh3+epFOuo+rOgsJboZHh9QsbTZyUAtVndKu0qEIerp9Q0/zzORdvrD
8aVWYbiTayJCyWaigr7nmrIzwmDSnre+vJyJYg63vggxEQGxRxL/JjuYSDNn
vIPrswjs2XvksqwIC+Wx1RcM1orB+u0MBmc+C/EY6Bv7qotB25fshOv3WehE
vGn8OTcxMNT/LS7UyEKuIk68H/PFoLk5c6F8iIXWmofLHDQUh3eWnJJhsqMo
4sojm7xgCVgsOt9rmTuKhgZepDSlSYCLKkVroWwUOSi/+jj6RAL8ndKsLj0b
Rcp1Xd56HFvgWKVsPal7FA0wfx7uyN0C96w1hZI3fEe2Ow2yV9okIa1n8T+3
E9+R9HDNaKCGDISuXXonaTCGOOaO5ra5ycCbqa3fZ9EYYq5TI2hHy8CtK68e
3yOMofuaeff/vZIBYk9cxxf/MWR+5lRkLlkWeu+0PP2RPIb8ZUw4O89thZO3
7p4J7x1D1jpzT/TLt8IRqUWLh8NjaLtNZdCND1shflqF+nVsDMVUp+3X59sG
yn8yttN+jyEY+vduDXkbXKaxt/fJjKOuHUPpNye3QdzNVyYx/uPotVHtd5fV
baCzZf61XfA4qrbIBi4hOSgcyolac2Qc5Xk6/zxkJAef1UpH9c6Mo8DTjZ5G
5+Tg15VfHNdvjKOfHQXS3eLy8Pmkq3Zi9zhi9p46cUFNHj6ddA5b/20c9Y6Q
OneaycP3gQbR6OFxVDvPn1AYKA8zjXuR9OQ4Oi8dzwi7Lw+6lW/qz3KzkUiY
/931VgrwIylmtVeHjdTW33rrSlaAd2sexJUasRGUjNKvhyqAWlBpuJ8ZG4X1
HZbSyFKAtDOhxKu72ei1dVyqK0sB9Js7zvHtYaP+4Zfl15cV4PwEfYPxPjaa
PcX1hr5JEfQDdK08DrKR9OOUf5GGimDPW+/tcoyNImWuh1+/qAh64UJ6+y+w
UcoLagr9hiKs40p0+XOJjYrct91Rf6QIIsxQi4R0Nuq4dGe4oU8RBux7d3jk
sJHi4jNXuqoS0Kk36CrlbNTT2a2r3qEEHkOdZTfestHYITGXyBEleEpUKtj6
no1WuH1CG+aVwDchJyTzA96vCe2Wi4wy5Ii6/SZ8ZqNzd2ZEIsOVob3/g86/
ETbKtdTTaTinDDFS9mu5mGz0YDDKaV2OMlR3u6Ytj+L9Cq9cyH2pDCcGzsnW
TLKRbgLfUr2gCkz0DP5LXGKj3VKuwuuUVEDATlVT+Dcb7anO1HLZpQKM/D/f
rv7F+52UPEjbqwKDoUXrg9dMILqX6re1T1RA5sOIZtCGCfRrLmzB+Z0KXJDj
rT3LN4H4Lz/anDugAlcsBcIz+CeQ8Rsjghr3dsjc5lecKDSBrurY1jl7bgej
t7mH3m+ZQFoD3nZmB7eD9K8V7j1SE6gj8XCPeux2iJqLlhmVnkDr+rImeIq3
Q4/yyb89WyfQrbPl0UtPtoPMjmbqLrkJBOr1XKNv8efXa8Oz5CdQ7BmGVMvk
dkjhMBpQUZpAEtuX7jxe3Q6X75z8GKA8gaq7NugXCakCr8B4ebrKBJpV1HU8
vVMV9p1sN29TnUBpnTZ9oQ6qsFv1n0iv2gRSi/He77NHFe7O9XH1qU+g/e0J
cUaJqrD8dKN/3Y4JtOZEFo9yjiroi1szb2pOoALZ8iyRu6rw6AP18XGtCdR3
9OO9Hx9VodqO4bhGZwKdkGLsHKGrQpBw5Y4X2EJvFl93LqhCodXF0/t1J5CT
hOxgpZQarNK0r+TrTSD2K51DeZpqQPDyOqimP4GSQ20Wki3UIMRq95d72Eqi
3mejPdTg+J37NEWDCdTcGLbpQLAanEg2yLmK7X8w4brHKTW4wE5dXcD+uzlL
ySpNDZ52BSi6GE6g63V3HusUqUFZja1AAbZhUJ3Ztidq0Ntv30rH7uH/2Mb/
Vg1SgoAkYzSBIl7QPf/1qcFWgd8vnbA3BS7SJibU4GeqLV8k9t2NG8L7V9TA
P2vBIgPb7pnM79bN6tDc3xtcgs3co5P0XFEdokVrE+9in+OxESozUoeB5fDC
cuytVV4FWQR1sDd703gTu54SpnbeTx1kr6WOJ2H7rE2oPhqhDtXVWcrB2EsP
Mi0DzqtDOPl+nBl2ltedTudsdSjWKPvJi63DWedjVqEO9yecL3fg/XRWdo6q
16uDzV8B7wvYoZ70Y5If1WGPQp6HPjbP6sIKD10dvtboJ33D8bpdzvvf0rw6
BESo/IzEtiTKiI+u14CKpZqb67CH/2jf+iypAXs59FPS8XnE3bbWatmhAbtM
Bhv5sLe4eNU9Bg0Y9vpnfhafZ/WvULsidw3g2kDln8TnPeuQ6X/6pAZcHJ97
UIrzIW2hbCI0VQNsTtZf/KmN86+wNtqnUAMs/QNfGWLv/0m7bPRGA1x2Bhws
wfm25uaClHKfBnx66DbYhvOxwIa3XGRCAyT2K736rjGBvuVqN/0Q3AFJhs2D
63D+5vVUCkQp7YCrShXknzjfffhV/H/v2gHe4cqF3dsn8Hwgs8K5bwdcHokq
PorrJb8x1+li9A54fjxzrzaupz3LwvkbU3eAgP63ZYbCBBoJ32Aq8mwHNAsc
b1DF9VhcceG/3LYd8DVLcLoO12sgk2NAemgHiHVIrbGSxefvvXRSab0mOFhM
dWrheh+zZj439NYEj+2O8okiE6gi3n993WFNYBXmRDXgfhFS209C5zRB6Xz7
4wnBCTSp1bVgV6kJO6K4B5U34fhJNup5/9MEc+Pif+JrcT+azXkYW6wF20V7
Kpg/2ahGXXh19ZkW1MamyIbNstGpA+nOie+1YIYedGhsio3+DiROpc5pQXTG
ZMzLMTZKYLwQ/SivDSleUsbfB9kosfO2+0ikNmR6TL+TxP2aGbovVj5eG3b3
cPtON7ORDa/crf2XtEG/oCm7+iUbrbO++XMsXxt4x2/OKtawUXLN1Ss/3mrD
ue3irTGVbPRfafxHzi068H2yYO9yGhsR9A8JiSrogP/LwRqVFDbieU30VNmh
A4/fpo4QkvDzGUoDDhY64NTz38UjZ9goTr5jNOuQDjhf2NykE85G4UUSK8q1
OrBz74bZaw5spKHNabHrtQ4QL1AkBOzYiP1y4rxDpw5oG2e/i7Nko+DhRt4I
ug4otn4qN9jFRgGyQaI1G3SBh2z/V1qZjdxuPtZwoOiC65tEvcZ/40hQ48YR
vyBdqEz/0Xr61zjqrEusOnJEF2a7m0t05sYRYYC8M+u8LtTL84pGjY0jS8kV
q8FKXfhKcsw+iu9//VwC5chfXbjlMG+jXTqOxLMYlzLz9cBX2Phhvfk4klB/
lvirTA9ux2lJRO4cR5LNSfF+j/Tg7lijmJzuOJKdVT2h0qIHiYX1XyhK40jJ
MSKgbkwPvognX/TYOI70uP8ZMvT0wXXjG02PL2PIJVKMqfteH/QsHsoV7R1D
Fz3szbsXDaDGvXtdo+93JPm0U5JzjSGUnihOtHD/jh4IeyzpbDQE4Zl3X2rt
v6Pe7j2Prmw1hNiisF2XDb8jRbdIebfdhhDiXCv/SuA7anYqXPfpuiGkWL61
9WsaRf9sFzo/mBrB+JO0bjmpUXR8V7F/27mdsFhtk3G8gYmsZ36fCmcYQ887
qz/WSnR0cneW2qtJY6j7mNhwUYqOHhTv6BdeNAbyFceyT5vpSMIjYFcNjwmI
+TQFnlihockXb5a4NE2g4N6h95v6aCjzXEbk9RgTUDEiqGSl0hBdVDn89SZT
4A3bnPzizwgSP/JSRlzcFP5Z7xJf+jmCHFu9PhzaZgosx436iD2Cqk/9pyGg
Zwpky4CYyb4RlDI8y/b2MgX3PWlvG6pHkG5FXfBMiSkU293zd44cQWdN3fZK
7jQDjrV9r0JnhtHuPQU/jSzN4NTGvAi/4WHEnzBx3tPRDJIiGo6FfhxGN1su
lGUEmEGc9SfRwYfD6AWhdmLdJTMY7T44JXlsGM16KUTNfTODxfM/Pm/9O4Se
n4pYv5lpBrylsh+/Tw2hMzcbcjWnzeCFjoh15/AQ4hsh1x3iNAefgFqxpZYh
pBKcyjGiZg5dXTbWdWlDaM+JhZSOWHP43FkfrKAyhJRyLKXZF7CVDLcMSw7h
+F2+vz7DHJQHsl7V8g+hU39VP1mWmkOpQpZN9+IgunZ+j2hNhzmcnTaXSmwd
RB1X3hXelkEgPhH2fPXoIMp8IqLTooKA58RMeHPwIPL5srd5RAdBcXIpV5nf
IBqT+MuUskVwkLH6/aP9IOIq0la7Go4gNWUu86HCIDJ+cP3pmZcIwCSyonSQ
iqy/dv6bbkUwp/ixhKuXipw5uO38uxEwJg9eju+kon3E8G+IhUB/izeh8yUV
2cbKxSesBbCU+WP37hYVtQvU39q5AaDjzabpTflU5FpKap3lB6iWZl06mk1F
lA//bd4rAVDm8Kjk8iUqiti6eMtCHYBqiKxUjlLRwpOM1mUtgHVJeXGeoVR0
arf61GN9AN/lwJtFQVR04WiAobw5wMfn586m+VBRXsv7Vk43gNJzP86+sqGi
rV5BU7WeAGvoFem9QEWlk6ubj/sAmD2rD+IxpaKHogYUxj68HmeXV7MuFb0O
LpxqiQJ4tUrMTpejIvu/u4TiYgHEjMkml2SoqDPjs6F+AkD0NrUTRVuo6FsN
b0LpJYCTTqRURSEq2uNcWuqbDqDabOp7hZ+KmHTzNpFMAA7EVya5kYqmN0YK
XbgJ4B/elnyOm4qOF/EbmRUDVJ3ey793DRX90q+gLNwG0Dl6Z5yyMoC49gyV
Bj0EuF/JPFn2awAl/4xpk3kKoPJWS2pxYQDxXxSe/vIC4G3oJ/beuQEk8Wi3
kW0zwLHVmqm06QGUb82grLwF+NNE2uQ8OYDkv51OqG7H8Xk6q6fGHkDlhyVu
h38C0Hj9mCw/NoB2cD5pU/4CENldFW44OoCqsp2mh74B7HG9cvgAcwDtVB8T
yhkCyKt7bldFH0CWHjK+68cA6rgvUvKHB9C7secJLycB5ozWxpkODSDH08Tb
0T8A1LmibJaoA6h781Sb1iIA32bryg8DA4hcdnH6+2+cL3z9RS/7BxDVWF64
aBXHt7Bky4dvAyjwY72RF7cFkE7w8C72DaDv+8i+grwWkLIzKtAYO+zXj4TW
TRbQmEnakvd1ABkfPSA2KmQBB+Ze6G/E5mH3V3JJWMC+z0bkm70DqDfQxUJO
xgKiLe8edsK+PdDSay5vAW7ow35Z7EiPnWG+KhZQ3OGnKoBt+eHemlMaFiA6
KVG+FVvQVi4nR8cCfAvrPrhgDzVe03hmaAHKY5wXC7HvGW1o7jaxALnWyiZ+
/PxTj86QZ8ECVuB4cD72btW5yU22FhDiIXbQAb+/WEnwOXUHvD438aEE3i9T
kipu72oBT20YqmtxPKoyXe8f8LQAamNziyCOVwLfG8tEHwv4tW/4gAmOp8uF
XX3F/haQLjD0N3FwAMmu3D/8cr8FKN7cd2QKx38ySp5r8JAFIKZIeeTIAKqd
yc79HW4BQc3ZGZL4/JIPbtSUiLQAmc3pQsOMAUSixbcYnLSAibuF4s2sAaTo
M+/lfsYCyCERl1q+D6Amh8Hz6ckWIPWa7i2H8yn9tduWe2kWEC/c+d9pnG++
Zm8ftF21gF1S5Z+WZgfQsubDb9z5FnBa8ZCW7eIA0hU6qxX72ALaPT+etOOk
Io7/Fl7nVluAy0uzhCtrcX1xhfhU11nAqVOrnb94qCh0gXjhxxsL+Fk6PCwr
iOu3T3EguN8CTuYM/HuzlYqOuV2PuDBsAbsPfj+ypEBF8H7TultMnC8Zze42
26losG5Re2jaAiLbN60a6FCRWGFrkgeXJdTr8rwLtsb1KW4mfYzHEk5xFt49
aU9FVRmPH1/eZAkxn22k7zhTkcu5POp7cUvIbjit7eFNRclBYboWGpYQRQqp
mDtCRcvqgkM7PC3B7O2MvkYJFS3mS57V87EEHRee6NZyKpoXUFLc5W8J9rtM
vU8/xPU/tyvE+pAlvDvyPU67gYrodfsWfU5bglC45tMX36jovcNz/uTbltCe
e4akJz6I3jW8epx21xJ01wT/s986iF5rdXhkPrSE7yqXFKJVBlGjMC2voMYS
tK07/UR2DqKqgQ0qzz5Ywmg8O4PkM4jyQvcg+oIlRJ5Y4vlWMohyBg/Sv/+2
hGJOipntvUGU5XL8wtQqfj5HTOa7Z4MoXS+5/RevFRRJDK9b1zaIzv15TBaQ
tQLxoOJbh2cHUeh/ayNMba1ge3T27RbLIWRaea8oO9sKlPbPNvrPD6GBbZWF
NjesoHT46IjhKr6/sisK5gutYK4gpk9ywzB6frbsJrHCCsaYRdU824aRrldR
Ln+9FUjp0IVjHIeR6tqsjCSaFeT4r7SevzOMxPxjE6I0rOF8sWlOoe4I+iFE
CCA1W8PIOnV1Ozw/MFMDSMfW20KQ5NQt3ed0FM7WkNfms4WB42peoQ10tGS3
PDUlaAtlK7G3ilroaAPX1QuHJG0hPvPOG45PdKR9suVpwA5bmNyuX3ptjI5O
BykLu7jbQuHVWYO1WxhIzHzyo3qhLcT4dsoURjFQ0Y0XN8Zv2cKdtBEL1zgG
Ul1ODL5TbgtJIe7+f88ykOlTmVX5KltYY/mKYpPGQPvUXDQl39iCm3yy9vVb
DPRIrCqVZwI/T2iHOvrIQPYz0fYsQzuQ9UjdbiPPRNI6skk8pnaQbhbqfl+F
iaaPvW5Wt7AD86Qme/4dTJS1KGh6zMEO1Pj+nKg1YqKhfxWaq/52cLttvK/W
kYmO8VGFt1yyA/atqW6PE0yUpwpDjgN2cKWo2bWpiYnCQkclI0bswAmRfum9
YSJ0P5WcybKDEyoBRYVtTMTU/vbp24wdFHu8HN7TzUSaO4+1HODeDUJ/ee/F
MZioxba0PGHHbpDy/zuny81Ck/t4jj+N3w2T5x2OnsSDwHSBdcPLxN0gbcHu
/GrJQjPfEta3X9oNRxMO62nastBPl+UbtMzdILLjqECLIwstmbBf85fvhm25
6zelebMQp0iH2KFPu0Hni6NiyVEW4nbh2Rv5ZTecOrN1LCGShdamWFfG9++G
iIG1z8jRLMTD0YCymfj9VOIPT8WxEP/k/YMtv3bDLXOtyJqLLLTl9eVaGTl7
kOehfv18g4UkV9u5VZXtwfHw+Yf6BSwkbczjoq9uD7c4g0tTi1hI9lECg2Bg
D7vWc08p3mYhxZtH+WLs7cHXOUFj6T4LKX+9TzrvbA9ezcVyEo9YSEWIXZTu
bg/WxeetdKpYSC050OC2nz3k+QuIOVazkHak+57uo/bwu2OdgWIjC+k+vFw+
GGUPqinfO9c1sZAeu/3nWKw9EOLly2mvWMgwwPri6gV7kFZNlE94w0ImjgaP
NPLsQXK24GxABwvZKopzXmzG+xns8X7cx0LjgXblJu/sIaNkz+41/SyUWhzt
PNtuD6z2pQLCAAv1yPbleX+xB5nMgfS2QRYK2HJdT2PMHpa4JFpi6CzE5dX2
bWTSHu49/WaSxWChsuzl+Gs/7GHzuWWdCiY+X2GfjpXf9sC2uVL8cpSFTvJL
BXVtIsC2ySFqARvHz8lhY5IQAYJSzl9OmmChpv9iHxuLE+DijYDe4EkWWsdL
/XdrGwF2DtzVEJ9moQo7vlIvJQJoh220ZGE7JpkSNqkRYLX50tK9GRa6ypWf
HaVHgIXgIGfVHyxkYPnBVH0nAbxubVwcxO5L+EcfNiXAYcOthNSfLLR1xU/L
3pYAk7lB3L1zLNRsmv7lH4EAvzi5jx6dZ6EDsY2xVS7Yy6PZ6xZY6N4v2VYp
bwJIvHaTkl1kIRcjl/BPfgTo07FJKML+eSJe5EIgAT7t9aiUXmKhXXPDAdOh
BCg3yw/g/MVCVB3B9bciCKCWaPkjFDshAu6TTxBghTzl8RH77VTRctMZAhz3
NLt1fpmFDml0FZ44TwDS8resz9h8oWts1ZIJEOB2KHjrbxZ6WKEzOZRKAGmh
YNn92MSxvVczrxBAaNa5oQR7Qfnqzt3ZBGgvvGk3gJ0b1Dz0N48A3V/amzb9
YSHT0p+JjwsJ8NDWS8MYe5gur36gFMejrCEtAPucnHuXZAVerzJ6LAFbOeB8
9Mf7BLi7nhNuYLcVPJFJrCKA+dG+nIfYYYOMlp3PcbxvRs01YAtIi4RM1RFA
V24f6S12lY+1YEkTPu/pPa9bsT2vR1aT3hDgAq+mxRvsX19LfTe+J8Crnquf
6rBviH3hbOokAOGBS9Q9bHPPtRWRPQRw+q1smINNzzRwUe0jwF+JAeE47Avd
QQuDVJw/oZrCFOztm7NvXKXh+LgzjPSxO1zeWtiNEmBCu/7Ceuwj6Yvf/7AJ
oHQgluMLjo/QB+X0RzP4vN0ZlTexV2a0b7+fx/Hm7+fzxmYLmdQzlwnw8sbt
En7sXgObnpUVAsxfFDzWgM+n2cuFLcHtADp5U/FB2A9ivdfo8TpA/qp91zrs
vIJ9Ek78DrCLxy60GJ/3cWa07VkJByg5U5bWjPMlYP05vxsyDmB2l7DNHttR
LTXymbwDlM0LCbbh/FKMKCoZ13CAc3szpZ7hfBTMvFvDpesALRZpFnLYf589
/SRj5AAR9ZrfknD+fv7TuuJm4QD3/04cNcf53STbIxpm6wB8CfanM3D+37MY
1EhycID0ul5+Kq6PCxd/+NR6OoCW3rp+/1ncT4Qln8uHOIDos5kKySkWkjdU
7DQ94gDr1m6P34Xrk99bk0WKdIAbpUbriLh+Rwsshf874wBcjk0oYpyFctRC
j8xddQBnoarlvSwWSnQ6kbQp1wF4+4WXnHF/iIiIz1fJd4DL8yXdBrh/7K7O
bKfccYC7jfkmP0ZwPljUq7yucwDqjGfMVioLMfe/NR9qcoCH2cc2UHG/+nTx
k+evNw5Q3hZUcfUb7g8fmOc1PjlATYSi0nQvC/l4bxrJYjqAusn4iz1duP/F
iS89GHcAw0uG5MmPuJ8WyvG3TTuAb4C3bmQnC21gGZj+++UAG5mVz4+1s1Bd
xJ7coE2OQOd5flcd91Pp5IeuhoaOUBbHqL76nIXuPrjfsmzsCBzZcjWsZyy0
80ulYQNyBHWh+E36T1nIQ75c2treEXIk5Zqbcb9PrS8ac/N1BELkux/lFSz0
Z/ZKwuFzjrA3fM2u/DwW6veOfFTa6QiSIurSTidZ6GDCMYWDPY7grKZlKIrv
q8WyiGz1Pkco7rL0/obvM6H5sLgqmiMIx/zt9oxgIUJ60O6meUcY3brJalsw
C9U0k0YGJJ3gltFCOocHrn/1XYLCwU4QMzIwK6WO68/hQ0ZjqBP8ySPOnNmO
1wvduzkkwgmEJv6whpRY6L+7l4RenXQC64mOL9e2sdAZ1X6RI6lOsPjjwIkR
URbarxK7pf2xE2ydZ5ydXmUiHYUG+fN/nSCwlb5TBt//7yUtDOauOMO2a3Z7
XSOYyFi6OUOr1wUkU3RfXbvMQHQFxaHxfhfoqNcdJ6Yy0CX1JPXSYRdIzkHj
gpcYqM+Y8FZi3AUeWhRnXD7HQNHe3X/W/HWBt67HSLknGMjH4ageW9AVNqyx
ih+iMFB28tmCekNX2BkZ13dUlYFCUnXfbNnlChLeZY1eygxknsGYiDJxhQeh
MmEWCgzEyrHZpQOusHbaYpeEDAPp3+H9fNveFW7rpQZSBRmo+80V3su+rkC7
KyLy5hcd8XOVRO495woCw396bd/T0brll+4/El2hpnk82OgdHa1MD+qevegK
AzGTvOqv6Wimf8uPolRX2PYnsEiqkY4+VV05PJLtCo6e76bkq+joauDZA/6V
rtBR+vbcpzw6EmsO8PL77Aovy3PK+8Lx816cMZrqdYWcaWW3XWH4eQ9uip3+
5grpY/u/5x/C8+n1vs83h1xBRFh3/th+Ouo76upGHXOFn22rWk4+dJQnBwTK
P1fQe2gn8M6WjmTPbjX1VnaDskzRqTl5OnpwnEd+cLsb9BO/Wo9uoyPzAz/W
71V3g2fLUitUWTryc2jpOajtBkHbZW59laSjm6LBoTHGbvBG65IEpzAdbbn7
IC/H2Q30t3wu1uSmo/KbOQlSbm7gP3K89CAnHe28nHCg0N0NdhqcMrnDQUde
kUTdO15uYK7Boav7j4ayzRfbqgPdoHBnd0r8Ig2J9Jgtf4lygyOPxPqXx2mo
9I3ysPdJN6j4KG19ZoyG9F4IvBmMdYOc2HUH1n+nIWI+LYOV4AYX56O/qjBp
6Erwhe0LKW6Q9C42r3iIhrb5hPOfTHMDjQrbKYdBGnrkSJ7/e9kNJvWGuP4M
0NAnHdUm7mtuQFRknAv+RkP8fzvIIoVuEPpf/eDJzzRUMP3MLLfYDZDqzVBC
Dw1p0goUpEvdQMVa4PXWbhpyehsxo1CB43XW5WvfRxpKzRC5qPcE71/g2vXE
dhriVfKtJr5zA0qTLVdLCw2FbEGEyjb8ffEN6TPNNPR+k/wQV4cbHLUMttuG
nbr4fe2zT26Qnke3Tm/C79N63FO83w36BJP23WygofB60vgRqhs0NDZR2PU0
9PHRrtOtQ27A6RaXYIqdcX219CTDDQyzDjpP1dJwPf83PzDpBhKVl9kJL2jo
mH94sv4MXp+zyHD2OQ31uLtJp/1wgyff+Cv2YWeZilubL7qBya+ff0nVNLSg
/ftr9i+83gs/au8zGiIpDYbO/HaDzeObh3ywxflvZRatusGVdAvrI09pKIYz
SWV5DRE+xlaVrT6hob7Fg3Vu3ESQbierZGHnDWsyOHmJsOmsWnxbFQ397tkc
TdlIBIcAJ48QbErr/Ianm4hw49NFKwFs6ce1ukFCRIi01wwJekxDcbfz3zaI
EOFtnnyBGPbg9QQfMXEi6A4msdof0ZB5+r7p8C1EEIktML+AXXDO9tw7KSJ0
Dt27Y4m9EqUqtk2WCA3HFmS5sf1D+e7GbCOCZXFdSdtDnC8e3V2qSkRIiu5s
DcBO2P0s6JwKEbjni4N1sWmmucv9qkTIfMrBx4NtqRObpqeBraD5lPaAhkqU
9silahJhX+XhPS+xuSQtnjG1iRBYzclbjL2fX9HeTI8IMw+0q5KwX3OuH7xm
QIRDq8ZeEdhKS+MR00ZEQCNOy37YSRMd3HbGRKhNVMx0wR4dfphbaEqEsz5e
CjbYdp+vavwyJ4J197k75tjlrSeaXC2IcN/XTMYUm6fBy6PCigghIXLnzLAP
PTYZW2NLBOWw1h5L7Pe3ZeN8dhPhcne7gCO2Wt4awScEIhD53+h5Y6ekM29t
dCKCZIaTWQj2xLl3RvtdiJDVuqIaj+0Yfbe93o0I4duPLeVg3wtN8xf1wL/f
ZnHrKTZfQMTcYRLe77a16l+wD3u4X3zrRYTZPHLqMnbnbkOprRQicK52vZbD
8dQ02/Iw2o8I3Q2bup2wnygc+sMZQAT5C3vHz2Lv3FBjlx5IBA/Wz9ha7IZZ
nqwtQUTg/bB4Yen/5/HVa6Q0mAiE6zlcu/D5vmso19AOIYLsndXZM9iOpb9i
6sKIkOruTWjDJh3N3dx9lAikvyk6oTifBshjfn6RRGiuev68GTvAfOfdsSgi
jMbG58nifAzZ2Ge5GkuEmNpLBxjY8bfFIzWSiJAjqn6/COc/d2pw0/NkIhSm
d9+TxPWRcuw5n9V/RGB68bFzsbMQ+bZ3Bt5vfc+GElxf5d+ye5Py8Pu82Rk6
iutzR9OovFA+EX68Gu0/W0NDVWWGR/ILcbyXB/fL4XquP967/mkpEV6ws5+F
1eH+tUlsF+0BERJ9jN/qNdKQ53zQhbDHRPD6tnphBru//1nX0hP8ec4V44cv
aYh5xzOEv4YIR/A1bvyKhuerazdMWoiwQ0f8VPxrGpKLElm59pUILgVdFS9x
/yrz3U+Q6yfCgxB+vxcdNKRh9TT7HpUIXz/bP3n6gYYMBT20WmhE0CsM0nuB
+x/hbmbA7AQR/L+ossdxvzw2JNRC4HCHChMtpzkqDbW+9W24y+kOk3VkSwHc
n2Uflj3fsNYdBGOoIprDOB/jje+953UHuZA/5pE0GpKXC7xGEMa/HyDLy4/S
UNe+x8EEZXf4UuJIX52hIe1xFz6CozsUtVwKKFpLR0ld19fddXaHuW8cMfzr
6Yhaw+DY4OYOfwSOdJzhoaPklOiFNk93eO1jIX5gIx2NqBcO2fu7A/rPvsR5
Mx1lhE8/sj/mDnfP5M6ek8H391yqp32uO1iNvRskGuH1+opJ+XnuYK1T+HVh
Jx29b6gm/7jpDnwpJPc8YzoqvTjifb3YHbjiB+q+m9GRj5T+nvG77mD67HZz
pjUdvbEcOHCpwR1ePdutqkGkoxtXVGPa6O4wUHDN3xjf93Zab/Psd3jA8oHN
ZQ/L6ahxzuTPUqcH6Mes8mltZ6DijueB7l0eMNaReXwJzzeJt/XeP+jxgFqR
0+ON6gxkT1a/HtTnAbxaV+YIWgz0uVbSqIfmAQIzGyTIhgzEPrt87MG8B3gx
r8WaWjOQmOBz9n5JTzj90QcU/BloeUyX2CTtCXof5srfBjAQ9dWDGqmtniDC
aK06GIiff7wsuVvBE2409OSXBzGQxtdryrDDE/yvzMSJhzGQZUFkoBR4QvzU
o08PYhgoXEO3vyvIE1QuS6c/ymCgE0uSv/0PeoLo2Nlyi6sMFNfMJTkdgj/n
7276lMlA/3l98d4Q4Qmd1cXDY9kMVJ4Y883ylCdk8aVe4MjH8yK1se9Juiec
ibvO117OQKQ0h6/XnnvC6qWauLpGBvLz0l9SqPWEXQxD6/VNDLRfQUa8qt4T
dM6k1rm+YqDjNdOkzleeAPXRj6ktDJTButK7rsMT7gS3JvW1MtB7s74v0SOe
wLlMP7Cnm4HMpvd/9uYlwdHKr9G5DByvOruS+o0kyChuJCcxGWj6olrEVn4S
WFblbzzGYqACudmNLCEScFabTFp+Z6AVj1irCGkShNnXx75nM9DLuitVSVok
2OoTBRE/GCg3OTJhXIcE5U03+E1+MlCEJ9nZUZ8EfWOb7nDNMdC2GWn25l0k
EMqY1E+fZ6AE+XK5fEsSBJoef5G8xEAWlxoznniSgMndpSz8j4EkScV7xLxI
cPyF0rFa7J/yiRonfUjQL4zO+68wUEm9fau5P17/4sv5klUG4pz9vNp2kAT0
9SUSApxM1F///INGKAnqy6UySrGrLuXduHwY71+25oMRFxMFKgQYeR4jAV87
300yNxO1kCbCR2JJEPqn51LcOia6qdBpanWGBGdFVY041jNR5OyjDWUJJHh6
6W/lWWzFlKiy0AskEGxpnzzNw0SJDWuGFtOxHVs/UjYwkW8Ks9L7CgkieT80
fMDWJ787WZ9JAqOyu5FmG5mIOZsqei6XBB47q83E+JjIRlHCaVMJCb6Z73S4
v4mJnk69kdtfSgIrAunBRn78vOfHF2vLSMDa6TgfjM1N+Fh4sJIE0dyy6pIC
TNR8JOlny1MSJBhMeQQJMpHuLv13ks9J4GCyZ7gKu5iTfuNoDQlK7u9zW8FO
uGZms7WRBIXSKdPpm5nIvG4+59Q7EsRyf5PJEWKiB4klYV1tJHB1ObvQgy3j
7GqxvYMEazNO1fALM9HfkUr2l08kaDRq5DmDHXbX+6VGDwkmW4yuVWEPHF+f
df4LCdZoJQqysGvX7TPT6SfBHY/Ur1YiTKT2SVAomUqCj3eslCKwr19vHB0a
wr8feR2Uhx2jIZmRyiCBpqF0yxj22MK7/QwW/pw9ReMTZSLyyxO7jMdI0F6d
sKSJbUjson+fJMG2NyMbDmOXScU/N58hwY6iig2XsEVZGqnXfpAgtUVt7S3s
xAf9AZNzJEj6s/dPLfZ8dLKB1SIJQkScpj9h77cw3JD3iwTn+seHmNg9G5hD
s79JsEXSsHMR2/LzlSd2/0hwulCrYZ0Yzq98lFywSoIlw8/3RLDlg6d8F9aQ
4cs9uYJt2Fe0b+g4cpNh7wfRq2rYHL93r7u1jgxj+x9c0sWOaFnsX+YhwzM0
fmEn9khq6UPXjWQQUXt90RTblURMvLOJDK6zphnm2E1bObxXBMjQscet6P/W
Gr+/w1OIDCduH6r5//cLqiic90TIwLUiPPj/9fjjeL9yipNhyDuZTw/7jM3z
Su8tZDhyd2W3OvY0f1DCIykyyNIeZMph7+kT8lwvSwb3mU9TotgfiptU92wj
A7LK9+LBNg0NX3kqTwYbTfKXXzge9/SlezYqkSHrmWPQd2zplbY7gSpkuO/W
wfsZ+7930XE1qmTgj1V83Yj9O0PJTVCDDEZ3b127gx3i06MUrEmGO+Tc+HTs
foWzvxu0ySC/7H7+OLb9lOZHET0ynA40KCFhb09IiWk2IoNa9ZyhOHa9ye21
jsZkeBRDvfcD54vr0surX0zJ8HP/4nTb//MpfOHemAUZ7LtHh45j86kJGh+z
JgP13bEMG+wiltq7P7ZkGL6fIiqK3eobQON3xPF71F98H+evr0RseK4zjge5
+14U9mzPtT9ybmTQq2RcNcOWcGgXNSCRwfiT3q/XuF4O7jIkUALIcOxpy55a
XF9/512/MgPx+qLjJ49hZzwK3R8eRIYdvWoJ27FfqBSfORtCBpVxa1I6rk8e
Mb4ndyLJ4N9F2WeB6/tmlzLoRJOh+tPfzeO4/rXTLD7UniRDvf/9+nRsL+7o
7x/OkMFymcX/GfePip80qflkHM9IFZYt7i/mD/6Wn/6PDB/LzKuGcP/pPiRu
uD6dDI3ilmmR2L9HHF0lM/H7HnCJysP9ivDxeSLkk6HqrTrpI+5v7Mq0qdTH
ZIjJfLJ3GPfLM8Hlp8SekmGD4m1Vb2whhZb1RdVkqGP+UurC/dU475fckzoy
zP/oeVOH+29K8j7Stzdk6K44OB7Lges/aNdLpX4yxLY9WXP3DwNdlnf+fZ5K
Bu4+EUlh7PnhQAP6EBkG2EpvT/1moEaf1MoCBo6X7wzNZpmBiK7DOeJTZFg7
tjeofZGBTppciODl8ALDzmOZ1/B91Lq5S25KyQtC3gheMBxloB0fWb4O272g
cGjoWBS+366m/s6pUPOC9ttMs2f4/vNdr8h/QMsLHqSqntDC9+PM36jfQzu9
YOj32UqxEXxfjkn3fHLwAu0QTY+qbwwU1Hgw8elRL0j6TJnQ6sD352F2tE2k
F1hU98WatTNQjExYaG+UFwxemhImvGeglLgjxF+xXjAR9zI4AN/Pj4yjtpkm
eUFkAP+vs68Z6G/1+fqWPC/Q2hVx+UY9fr+HBfPdLV4QuDMgAt3D923R5/0/
RL3BJ8pz85oUHJ/y1SWt597Qw1mYv9OWgUZJtkWXarxBb/J8kI0NA/Vxp+1m
1HmDV7B0ORHPR3UBktezm7zBWOja7XBLBjonYWD8r80bdiffqb1nzkCCySFx
76ne0KZqyGdlhOeh4C8cQZw+oGwq1cHC85qsqHRFI7cPbGg+XL0WW7Al0E1i
vQ+4BCV6Kasw0JzsbHH7Rh9Y/4/5/pASA9X2brDSFfWB34bNuctyDLTbFi6s
qvjAZr0iorkUA+1TquTNc/IBvw1qkcH8DHTqzZ4QZVcf+LlRbDhjE55ngoTa
q4g+MFp90q+Oj4Hqb59MbSf7gE04/YbwRgYSUd4t8G+vD1g5N7l1rWegt8os
kYAoHzDa+13s/Bo8773NPTEZ4wMFPzYmN3Lg+eGAY29MrA90H9iv8meVjrbe
eZJzJcEHBrO8F6NX6ChG5ZxkS4oPqIv8+Bv/h47Utm/dplzoA7yPa8ffL9AR
tHYnVBX7wLBy8/ct2KSDSTTzUh9IU9BTC5mno/PlUyXkCh8IivyUwD+H5+vt
9UqXnvjAq9YjWQdm6Shd1Vt98p0PHPVe4+Y5QUc/1DINq2Z9YCtnop4+nY76
OsBGeM4HKmeP3Kmm0VFT+LR75IIPzNS1uxpjp1fZHzX87QMtxCYbmxH8fsYc
92q5KPD4oNTbQ0N0FGh/WK5FjAL3RE6lTvXTkf2EpLbiFgrEHhrNOI+tndZq
fkGKAoF5/7oksVc+KfjabaOAUpDBRqdveH736s9uV6WA/RGevU1f6ehzsB3f
Z1MKPNTV/Uz/TEd1vAuSBogCS8nnm1OxSypLVLMtKLBR59oPI+yImX+2XrYU
kMmY23y1h442RT89S3WhQIHpcYpnNx3NSwRmmBEpsNyT78KLTa0VKCzwoIDW
bFxiYxcd3V0JqQ/wpsDTT8RHGti2SXJLzEAKDDP1BCU+0dGO7R/X2gZRoMPz
G2/vRzoSeR8ncieYAqVnVKyvYdM39ekcCsPP2/zilDh2/LX0sKkTFFixPzOj
1klHB4xMY51jKDD/QGD65wc6cv42funhKQpcjnmjUY8tLWNz52g8BfT2hBwi
Yr8o/UNbSKbA3WOaX9M66MjQKnKJ8B8FRCZEngRgP6NN8hWlUSDug0+TPnaV
7JAR4SoF1wf98Eg7jncDyakwiwJiHzI3vcB+SPkYOJ9Nge965wYzsO/lNqUV
3KDArXULfLbYaka7bs3lU+B46FioPHbFl8cvdhdRoEtmaXn1PR2VCd1i/Cyl
wBo/65JG7KLUC7vsHlCA5vZAioAtq77ifPMRBWZuHZzQws5vi9r/o4oC24Wy
v4th5607ePnGcwr8cpXbN9ZGRxK3R0pna3B+lIfQurFzrLxrbeopwK22cqkR
OyuBwJppws+r6Sdfxxba2vLbuoUC+5wE4pKxrzSYCOa9ocDtLUGt+B8/JOj7
VGnmHQXMaG6mIdjpvzVMrN/j/QU7fPXF3nT9tuv1Dgo4RrzLdcVONZI9MN1J
gUeNJgk22Bt6s2OtuihgIyabZoJ9KVLgSm4PBc4aMxt1sXmEk8umvlBgYJpL
VB076TFHvWUfBd4v/kxXxF7rerIrp58Cr0VVNLZiJ07/GJ2kUgAExCYlsTnT
Qv5aDOP8KjPoFMc+q87YnEOjQG7hny5RbI73FJVJBgUCGgYXRbDPHPxsajFK
Af3Lbqb///zvOidi9hgFijxeFIthx95+EzzBpoDdNxflLdi/rcxPwxQFnqQQ
26SxY+jVV6/NUCCs9/clOezFBK1y9g8K/FY9H6yCfWJreQOax/nwU2mvJvZ8
w7aerEUK1BTIRBliH/O9Pjb+iwJ/8kpvI+zZ35tXzP/g/PRcmLbHPnI9RTjr
HwUmjQluntjTRlyq46sUuF8z2L4XO6w31tyc0xdWzNl+R7DZkfPumdy+cGjn
3XVnsA8JHz40ts4XTgh7vUnDPuC6J+vqRl+4phh89hE2c7q34vsmX6gxMDvd
gr0vzeWlqaAvFA+x//uKHfAe2KMivkC9Xz3EifNr6GDNqom4L1g+tJeTxPZb
ryt6ZYsvpK7kH9fF9rFWABNZX5gzjbQ+gP3vMw9/yzZf4H5zUSHx//kcND1A
UPAFpvJ581vYo0k10T7b8fcndiqwsC+JF9rQ1fD7C0Sz1+P60ChPFA7Z4Quc
l0rH1LGPtbk8PKnrC5qrnxOjsUV9DE6vMfAFnnrKtkLsF2xJh0tGvpDp8m3q
HfbKxtHRXFNfcIht2iKD6zfFOU72ha0vqBw6fvUL9o7hvZPI3hfC/Vl563A/
+HTErvadgy+c3+HXvhNb7IoQ6aurL5R0BRUWYZf0lKct+vhCVeSZ2dO439R6
ffmrf8QX3H0H/x3G/ctvvPZ9/VFfuP5DYvQRNsepolzrSF+4QfUamce2vRGq
73HSF1w0RdYm4P7XPbgm7Ph5X+jyFRwtwf2SHag58DjHF8I2qz7b8oWO0uaE
K3bl+UJyivuGw9jaictRr276wnNTU+9X2FG3Xwt1FftCbdCfwbBenP9jPoTZ
Sl/wvUYkfcT9XerwxRrNJl/oQUI5Tfg+SF89YPBfsy9U0x9rSg/g71+1ffz9
tS/02ilcisFmV6+tKGrzhZSw1QQ9Kt4fR2KuUI8v/CtRJ1UN4vPNSoheZPmC
SZbfnm58P+XWnTRo3OgHrqf9lq58x+exIeyxE9kPBBXP/dewSEelVqdPzXr7
wZ8nlVedluhI93S6VaavH1jO8UsMYTvPPvrSt9cPNAIVrnEs43rvXVjeF+YH
/dpsGQd8P/8qibc8ddYPHOrzs+bxfd5vktlTVukHDwy4olJ4GejgidKb9g/8
4CVns5HyBgZafPAsaPKRH4Sf3mrQjC0k37ekU+0HtZUn+3/jecKBR0a6ockP
DpiuyQ7H80j957L9PV/8oEmwYf0eYQYi8L/YEdXnB8LLe9L/YvfZtS1KDPhB
s5Gh9g0RPI/VTiTvGfGDraMXGvpE8bxZrH1/nO0Hh3dXvfWQwOv1W0SlTvkB
3zHemTlsgog70pr1gyHR+/KZWxjowMUTXZELfmCmr1HaJYnXa0rKE//lB6pT
WtMReF469ztnX+1vP/gMXSaC0nj+0q/Q8PuH9+Os+N9D7ILDtQurq36gbGDW
7yzDQP8DMYVhtw==
          "]]}, Annotation[#, "Charting`Private`Tag$5118#1"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.922526, 0.385626, 0.209179], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
          "]]}, Annotation[#, "Charting`Private`Tag$5118#1"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.528488, 0.470624, 0.701351], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1:eJxF0nlMkmEYAHBGbWXXGF5lpB3YYRielPdrKIampgn2pSSmZGtmVmoNK9E1
0bJGWWaugxjrsgjLDsWUoat0HbO8YmWH1soOIcWrmdX6et4/GPvtud73e58F
m3fESqgUCiX5z+/v/1B3cxPzcFOgzEYT9k56MIjH7Htt7vwRhGz/ebRz5UlT
JxVRSDdyL6lbVdboLZnPeFPzcTNrHsokbZOedHUKdxESkz7uztNFCZYiLemX
5W56M80V/Z93WJ33jDrHHdFIx5ypYkUkeEA/+xM9xaVnPZGStIOhME+kxXY0
Lcte0ojtvDZTrPvkCfWek8c5PZ5eSEE6Osuu16PFC+bL4/iBz4e8oX63z4Wk
5oJVSE86pH9MmtHji/5/j3z/mGSHVQFITHpTtuXQ49xApCftqzldfaAhCFHs
/rkp7fy3xhwETh8xyx7NDAaPLqd1uwpWI0Tav/KasqyMC3G7pFxZDisEKcn+
Znq4WGgIgfkKaaXT5Q5st/cz3oz2YWdUPROdtQ5FMtJ90YKE3tRQuE9viVi4
awoP8vn9e/gfOGEw72vK1N3VeWvgPDymPVVu4EOc/mTxUW1/OPRnFN1Yx+Gs
RfNJly/3oVmnRcL+tDgEew8ci4L98WUYFOyOaDjPrEmqrOSCdVDvmO/kTyyO
AVs5J96JfRgD77MiYM6NPaJYeL9d3fTGcMp6eN/+gRIBvxw7jP2ggu8aB/n1
A34/h5/GQf8MloexVSIAC49EdJ68K4D8gO+pbYSVEPbbThemqpsuhPh3uUum
0yzscwtM0z/QhTD/V1wuN5OB3aA7drOQjR1cXK+4JRDC/UKZsyNnqnC/pbJD
ew0r4+H7uUh8GpyN8VAvqd96sHrnBqhvULalmm0JiBuZ2zSKLQT0G7w8Mcy+
S8B9Pwp5yuIa7K7JR9b06Ah4P53Y4XSZnoD5BbO9fcebCZhHK9q2r+UVrmel
tVMk1I2Qn+JcaVURiW12KeXcNGHfU/98ZylKgPqNIYuQn2Mi7Ofc7fKaFXps
22npVZHxItgfNXe/1ERge+w/yi1NxI4yadu7kkXQv7DDMpqSjj2iylstzRdB
f6Nf6YuLldhbs9Vn+Brcb0hzW/JVK4L9py/sGna/g+MRU+cx7utxvK7tYuqL
dhwfrP1StOkttusFt+uf+7DrjME5Jd/w/HCb9UFsE/YWeXZrlgWff1BfWGE/
gusLxk6l1I5h07yusETjOP/c9lrLxAT2b7Srt40=
          "]]}, Annotation[#, "Charting`Private`Tag$5118#1"]& ]}}, {}}, {
    DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
     AxesOrigin -> {0, 0}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, DisplayFunction -> Identity, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {0, 0}}, PlotRangeClipping -> True, ImagePadding -> 
     All, DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {
       FormBox[
        TagBox["\"time\"", HoldForm], TraditionalForm], 
       FormBox[
        TagBox["\"concentration\"", HoldForm], TraditionalForm]}, 
     AxesOrigin -> {0, 0}, DisplayFunction :> Identity, 
     Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, 
       "DefaultGraphicsInteraction" -> {
        "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
         "Effects" -> {
          "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
           "Droplines" -> {
            "freeformCursorMode" -> True, 
             "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
       "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> None,
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}}, 
     PlotRange -> {{0., 119.99999755102041`}, {0., 1.2}}, PlotRangeClipping -> 
     True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {Automatic, Automatic}}, 
     Ticks -> {Automatic, Automatic}}], 
   FormBox[
    FormBox[
     TemplateBox[{"\"N1\"", "\"N2\"", "\"M1\"", "\"M2\"", "\"M3\""}, 
      "LineLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #5}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.368417, 0.506779, 0.709798]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.880722, 0.611041, 0.142051]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.560181, 0.691569, 0.194885]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.922526, 0.385626, 0.209179]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.528488, 0.470624, 0.701351]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3, ",", #4, ",", #5}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.903704668471861*^9, 3.9037046833523664`*^9}, 
   3.9037047239164343`*^9, 3.90370480795407*^9, 3.9042601156153708`*^9, 
   3.9042601879626646`*^9, {3.9073292732828484`*^9, 3.9073292772973723`*^9}, {
   3.907329348648941*^9, 3.907329404805063*^9}, 3.907329472266308*^9, 
   3.9073295461537123`*^9, {3.907329592341118*^9, 3.907329644551279*^9}, {
   3.907329675651574*^9, 3.907329787184366*^9}, {3.907377024206462*^9, 
   3.9073770476281548`*^9}},
 CellLabel->"Out[11]=",ExpressionUUID->"79f14eb5-a79f-4e4d-a113-16d351598ee8"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"Pars", " ", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"r1", "->", 
      RowBox[{"5", "/", "7"}]}], ",", 
     RowBox[{"r2", "->", "1"}], ",", 
     RowBox[{"a11", "->", "1"}], ",", 
     RowBox[{"a12", "->", 
      RowBox[{"9", "/", "5"}]}], ",", 
     RowBox[{"a21", "->", 
      RowBox[{"2", "/", "3"}]}], ",", 
     RowBox[{"a22", "->", "1"}], ",", 
     RowBox[{"c11", "\[Rule]", "1"}], ",", 
     RowBox[{"c12", "\[Rule]", 
      RowBox[{"6", "/", "7"}]}], ",", 
     RowBox[{"c21", "\[Rule]", "1"}], ",", 
     RowBox[{"c22", "\[Rule]", "1"}], ",", 
     RowBox[{"v", "->", 
      RowBox[{"3", "/", "4"}]}]}], "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"InitialConditions", "=", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"N1", "[", "0", "]"}], "==", 
      FractionBox[
       RowBox[{
        RowBox[{"(", 
         RowBox[{"a12", "+", "a21", "+", 
          RowBox[{"a12", " ", "a21"}], "-", "a22", "-", 
          RowBox[{"a11", " ", 
           RowBox[{"(", 
            RowBox[{"1", "+", "a22"}], ")"}]}]}], ")"}], " ", "r1", " ", "r2",
         " ", "v"}], 
       RowBox[{
        RowBox[{
         RowBox[{"(", 
          RowBox[{"a21", "-", "a22"}], ")"}], " ", "r2", " ", 
         RowBox[{"(", 
          RowBox[{"c12", "+", 
           RowBox[{"c11", " ", "v"}]}], ")"}]}], "-", 
        RowBox[{"a11", " ", "r1", " ", 
         RowBox[{"(", 
          RowBox[{"c22", "+", 
           RowBox[{"c21", " ", "v"}]}], ")"}]}], "+", 
        RowBox[{"a12", " ", "r1", " ", 
         RowBox[{"(", 
          RowBox[{"c22", "+", 
           RowBox[{"c21", " ", "v"}]}], ")"}]}]}]]}], ",", 
     RowBox[{
      RowBox[{"N2", "[", "0", "]"}], "==", 
      FractionBox[
       RowBox[{
        RowBox[{"(", 
         RowBox[{"a12", "+", "a21", "+", 
          RowBox[{"a12", " ", "a21"}], "-", "a22", "-", 
          RowBox[{"a11", " ", 
           RowBox[{"(", 
            RowBox[{"1", "+", "a22"}], ")"}]}]}], ")"}], " ", "r1", " ", 
        "r2"}], 
       RowBox[{
        RowBox[{
         RowBox[{"(", 
          RowBox[{"a21", "-", "a22"}], ")"}], " ", "r2", " ", 
         RowBox[{"(", 
          RowBox[{"c12", "+", 
           RowBox[{"c11", " ", "v"}]}], ")"}]}], "-", 
        RowBox[{"a11", " ", "r1", " ", 
         RowBox[{"(", 
          RowBox[{"c22", "+", 
           RowBox[{"c21", " ", "v"}]}], ")"}]}], "+", 
        RowBox[{"a12", " ", "r1", " ", 
         RowBox[{"(", 
          RowBox[{"c22", "+", 
           RowBox[{"c21", " ", "v"}]}], ")"}]}]}]]}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"M1", "[", "0", "]"}], "==", 
      RowBox[{
       FractionBox[
        RowBox[{
         RowBox[{
          RowBox[{"(", 
           RowBox[{"1", "+", "a12"}], ")"}], " ", "c22", " ", "r1"}], "+", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"1", "+", "a12"}], ")"}], " ", "c21", " ", "r1", " ", 
          "v"}], "-", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"1", "+", "a22"}], ")"}], " ", "r2", " ", 
          RowBox[{"(", 
           RowBox[{"c12", "+", 
            RowBox[{"c11", " ", "v"}]}], ")"}]}]}], 
        RowBox[{
         RowBox[{
          RowBox[{"(", 
           RowBox[{"a21", "-", "a22"}], ")"}], " ", "r2", " ", 
          RowBox[{"(", 
           RowBox[{"c12", "+", 
            RowBox[{"c11", " ", "v"}]}], ")"}]}], "-", 
         RowBox[{"a11", " ", "r1", " ", 
          RowBox[{"(", 
           RowBox[{"c22", "+", 
            RowBox[{"c21", " ", "v"}]}], ")"}]}], "+", 
         RowBox[{"a12", " ", "r1", " ", 
          RowBox[{"(", 
           RowBox[{"c22", "+", 
            RowBox[{"c21", " ", "v"}]}], ")"}]}]}]], "-", "0.005"}]}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"M2", "[", "0", "]"}], "==", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"1", "-", 
         FractionBox[
          RowBox[{
           RowBox[{
            RowBox[{"(", 
             RowBox[{"1", "+", "a12"}], ")"}], " ", "c22", " ", "r1"}], "+", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{"1", "+", "a12"}], ")"}], " ", "c21", " ", "r1", " ", 
            "v"}], "-", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{"1", "+", "a22"}], ")"}], " ", "r2", " ", 
            RowBox[{"(", 
             RowBox[{"c12", "+", 
              RowBox[{"c11", " ", "v"}]}], ")"}]}]}], 
          RowBox[{
           RowBox[{
            RowBox[{"(", 
             RowBox[{"a21", "-", "a22"}], ")"}], " ", "r2", " ", 
            RowBox[{"(", 
             RowBox[{"c12", "+", 
              RowBox[{"c11", " ", "v"}]}], ")"}]}], "-", 
           RowBox[{"a11", " ", "r1", " ", 
            RowBox[{"(", 
             RowBox[{"c22", "+", 
              RowBox[{"c21", " ", "v"}]}], ")"}]}], "+", 
           RowBox[{"a12", " ", "r1", " ", 
            RowBox[{"(", 
             RowBox[{"c22", "+", 
              RowBox[{"c21", " ", "v"}]}], ")"}]}]}]]}], ")"}], "-", 
       "0.005"}]}]}], "}"}], "/.", "Pars"}]}]}], "Input",
 CellChangeTimes->{{3.904174236476513*^9, 3.9041742464264216`*^9}, {
  3.904174278887768*^9, 3.904174323437605*^9}},
 CellLabel->"In[24]:=",ExpressionUUID->"624260ef-7444-4ee0-9555-d656281c9a89"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    RowBox[{"N1", "[", "0", "]"}], "\[Equal]", 
    FractionBox["10", "13"]}], ",", 
   RowBox[{
    RowBox[{"N2", "[", "0", "]"}], "\[Equal]", 
    FractionBox["40", "39"]}], ",", 
   RowBox[{
    RowBox[{"M1", "[", "0", "]"}], "\[Equal]", "0.6103846153846154`"}], ",", 
   RowBox[{
    RowBox[{"M2", "[", "0", "]"}], "\[Equal]", "0.3796153846153846`"}]}], 
  "}"}]], "Output",
 CellChangeTimes->{3.9041742477580633`*^9, 3.9041742854851465`*^9, 
  3.9041743246290207`*^9, 3.904260115630995*^9, 3.90426018798415*^9},
 CellLabel->"Out[25]=",ExpressionUUID->"a15b0b13-2dad-4bc0-9cca-a43c1b83f662"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"d", " ", "=", " ", 
   RowBox[{"1", "/", "8"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Pars", " ", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"r1", "->", 
      RowBox[{"5", "/", "7"}]}], ",", 
     RowBox[{"r2", "->", "1"}], ",", 
     RowBox[{"a11", "->", "1"}], ",", 
     RowBox[{"a12", "->", 
      RowBox[{"9", "/", "5"}]}], ",", 
     RowBox[{"a21", "->", 
      RowBox[{"2", "/", "3"}]}], ",", 
     RowBox[{"a22", "->", "1"}], ",", 
     RowBox[{"c11", "\[Rule]", "1"}], ",", 
     RowBox[{"c12", "\[Rule]", 
      RowBox[{"6", "/", "7"}]}], ",", 
     RowBox[{"c21", "\[Rule]", "1"}], ",", 
     RowBox[{"c22", "\[Rule]", "1"}], ",", 
     RowBox[{"v", "->", 
      RowBox[{"3", "/", "4"}]}]}], "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"data", " ", "=", " ", 
   RowBox[{"{", 
    RowBox[{"{", 
     RowBox[{
     "\"\<a13\>\"", ",", "\"\<a23\>\"", ",", "\"\<e1\>\"", ",", " ", 
      "\"\<e2\>\"", ",", " ", "\"\<N1_f\>\"", ",", " ", "\"\<N2_f\>\"", ",", 
      " ", "\"\<M1_f\>\"", ",", "\"\<M2_f\>\"", ",", " ", "\"\<N1'_f\>\"", 
      ",", " ", "\"\<N2'_f\>\"", ",", " ", "\"\<M1'_f\>\"", ",", " ", 
      "\"\<M2'_f\>\""}], "}"}], "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"For", "[", 
   RowBox[{
    RowBox[{"a13", " ", "=", 
     RowBox[{"-", "2"}]}], ",", 
    RowBox[{"a13", "<=", "2"}], ",", 
    RowBox[{"a13", "+=", "d"}], ",", "\[IndentingNewLine]", 
    RowBox[{"For", "[", 
     RowBox[{
      RowBox[{"a23", "=", 
       RowBox[{"-", "2"}]}], ",", 
      RowBox[{"a23", "<=", "2"}], ",", 
      RowBox[{"a23", "+=", "d"}], ",", "\[IndentingNewLine]", 
      RowBox[{"For", "[", 
       RowBox[{
        RowBox[{"e1", "=", 
         RowBox[{"-", "2"}]}], ",", 
        RowBox[{"e1", "<=", "2"}], ",", 
        RowBox[{"e1", "+=", "d"}], ",", "\[IndentingNewLine]", 
        RowBox[{"For", "[", 
         RowBox[{
          RowBox[{"e2", "=", 
           RowBox[{"-", "2"}]}], ",", 
          RowBox[{"e2", "<=", "2"}], ",", 
          RowBox[{"e2", "+=", "d"}], ",", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"System", "=", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{
               RowBox[{
                RowBox[{
                 RowBox[{"N1", "'"}], "[", "t", "]"}], "==", 
                RowBox[{
                 RowBox[{"r1", "*", 
                  RowBox[{"N1", "[", "t", "]"}], 
                  RowBox[{"(", 
                   RowBox[{"1", "+", 
                    RowBox[{"a11", "*", 
                    RowBox[{"M1", "[", "t", "]"}]}], "+", 
                    RowBox[{"a12", "*", 
                    RowBox[{"M2", "[", "t", "]"}]}], "+", 
                    RowBox[{"a13", "*", 
                    RowBox[{"(", 
                    RowBox[{"1", "-", 
                    RowBox[{"M1", "[", "t", "]"}], "-", 
                    RowBox[{"M2", "[", "t", "]"}]}], ")"}]}]}], ")"}]}], "-", 
                 RowBox[{"c11", "*", 
                  RowBox[{
                   RowBox[{"(", 
                    RowBox[{"N1", "[", "t", "]"}], ")"}], "^", "2"}]}], "-", 
                 RowBox[{"c12", "*", 
                  RowBox[{"N1", "[", "t", "]"}], "*", 
                  RowBox[{"N2", "[", "t", "]"}]}]}]}], ",", 
               "\[IndentingNewLine]", 
               RowBox[{
                RowBox[{
                 RowBox[{"N2", "'"}], "[", "t", "]"}], "==", 
                RowBox[{
                 RowBox[{"r2", "*", 
                  RowBox[{"N2", "[", "t", "]"}], 
                  RowBox[{"(", 
                   RowBox[{"1", "+", 
                    RowBox[{"a21", " ", "*", 
                    RowBox[{"M1", "[", "t", "]"}]}], "+", 
                    RowBox[{"a22", "*", 
                    RowBox[{"M2", "[", "t", "]"}]}], "+", 
                    RowBox[{"a23", 
                    RowBox[{"(", 
                    RowBox[{"1", "-", 
                    RowBox[{"M1", "[", "t", "]"}], "-", 
                    RowBox[{"M2", "[", "t", "]"}]}], ")"}]}]}], ")"}]}], "-", 
                 RowBox[{"c22", "*", 
                  RowBox[{
                   RowBox[{"(", 
                    RowBox[{"N2", "[", "t", "]"}], ")"}], "^", "2"}]}], "-", 
                 RowBox[{"c21", "*", 
                  RowBox[{"N1", "[", "t", "]"}], "*", 
                  RowBox[{"N2", "[", "t", "]"}]}]}]}], ",", 
               "\[IndentingNewLine]", 
               RowBox[{
                RowBox[{
                 RowBox[{"M1", "'"}], "[", "t", "]"}], "==", 
                RowBox[{
                 RowBox[{
                  RowBox[{
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"M1", "[", "t", "]"}], "*", 
                    RowBox[{"M2", "[", "t", "]"}]}], ")"}], "/", 
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"N1", "[", "t", "]"}], "+", 
                    RowBox[{"N2", "[", "t", "]"}]}], ")"}]}], 
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"N1", "[", "t", "]"}], "-", 
                    RowBox[{"v", "*", 
                    RowBox[{"N2", "[", "t", "]"}]}]}], ")"}]}], "-", 
                 RowBox[{
                  RowBox[{"M1", "[", "t", "]"}], "*", 
                  RowBox[{
                   RowBox[{"(", 
                    RowBox[{"1", "-", 
                    RowBox[{"M1", "[", "t", "]"}], "-", 
                    RowBox[{"M2", "[", "t", "]"}]}], ")"}], "/", 
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"N1", "[", "t", "]"}], "+", 
                    RowBox[{"N2", "[", "t", "]"}]}], ")"}]}], 
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"e1", "*", 
                    RowBox[{"N1", "[", "t", "]"}]}], "+", 
                    RowBox[{"e2", "*", 
                    RowBox[{"N2", "[", "t", "]"}]}]}], ")"}]}]}]}], ",", 
               "\[IndentingNewLine]", 
               RowBox[{
                RowBox[{
                 RowBox[{"M2", "'"}], "[", "t", "]"}], "==", 
                RowBox[{
                 RowBox[{
                  RowBox[{
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"M1", "[", "t", "]"}], "*", 
                    RowBox[{"M2", "[", "t", "]"}]}], ")"}], "/", 
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"N1", "[", "t", "]"}], "+", 
                    RowBox[{"N2", "[", "t", "]"}]}], ")"}]}], 
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"v", " ", "*", 
                    RowBox[{"N2", "[", "t", "]"}]}], "-", 
                    RowBox[{"N1", "[", "t", "]"}]}], ")"}]}], "-", 
                 RowBox[{
                  RowBox[{"M2", "[", "t", "]"}], "*", 
                  RowBox[{
                   RowBox[{"(", 
                    RowBox[{"1", "-", 
                    RowBox[{"M1", "[", "t", "]"}], "-", 
                    RowBox[{"M2", "[", "t", "]"}]}], ")"}], "/", 
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"N1", "[", "t", "]"}], "+", 
                    RowBox[{"N2", "[", "t", "]"}]}], ")"}]}], 
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"e1", "*", 
                    RowBox[{"N1", "[", "t", "]"}]}], "+", 
                    RowBox[{"e2", "*", 
                    RowBox[{"N2", "[", "t", "]"}]}]}], ")"}]}]}]}]}], "}"}], "/.",
              "Pars"}]}], ";", "\[IndentingNewLine]", 
           RowBox[{"Solution", "=", 
            RowBox[{"NDSolve", "[", 
             RowBox[{
              RowBox[{"Union", "[", 
               RowBox[{"System", ",", "InitialConditions"}], "]"}], ",", 
              RowBox[{"{", 
               RowBox[{"N1", ",", " ", "N2", ",", "M1", ",", "M2"}], "}"}], 
              ",", 
              RowBox[{"{", 
               RowBox[{"t", ",", "0", ",", "1000"}], "}"}], ",", " ", 
              RowBox[{"Method", " ", "->", "\"\<StiffnessSwitching\>\""}]}], 
             "]"}]}], ";", "\[IndentingNewLine]", 
           RowBox[{"row", " ", "=", " ", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"N", "[", "a13", "]"}], ",", 
              RowBox[{"N", "[", "a23", "]"}], ",", 
              RowBox[{"N", "[", "e1", "]"}], ",", 
              RowBox[{"N", "[", "e2", "]"}], ",", " ", 
              RowBox[{"First", "[", 
               RowBox[{
                RowBox[{"N1", "[", "1000", "]"}], "/.", "Solution"}], "]"}], 
              ",", 
              RowBox[{"First", "[", 
               RowBox[{
                RowBox[{"N2", "[", "1000", "]"}], "/.", "Solution"}], "]"}], 
              ",", " ", 
              RowBox[{"First", "[", 
               RowBox[{
                RowBox[{"M1", "[", "1000", "]"}], "/.", "Solution"}], "]"}], 
              ",", 
              RowBox[{"First", "[", 
               RowBox[{
                RowBox[{"M2", "[", "1000", "]"}], "/.", "Solution"}], "]"}], 
              ",", 
              RowBox[{"First", "[", 
               RowBox[{
                RowBox[{
                 RowBox[{"N1", "'"}], "[", "1000", "]"}], "/.", "Solution"}], 
               "]"}], ",", 
              RowBox[{"First", "[", 
               RowBox[{
                RowBox[{
                 RowBox[{"N2", "'"}], "[", "1000", "]"}], "/.", "Solution"}], 
               "]"}], ",", " ", 
              RowBox[{"First", "[", 
               RowBox[{
                RowBox[{
                 RowBox[{"M1", "'"}], "[", "1000", "]"}], "/.", "Solution"}], 
               "]"}], ",", " ", 
              RowBox[{"First", "[", 
               RowBox[{
                RowBox[{
                 RowBox[{"M2", "'"}], "[", "1000", "]"}], "/.", "Solution"}], 
               "]"}]}], "}"}]}], ";", "\[IndentingNewLine]", 
           RowBox[{"AppendTo", "[", 
            RowBox[{"data", ",", " ", "row"}], "]"}]}]}], "]"}]}], "]"}]}], 
     "]"}]}], "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"Export", "[", 
  RowBox[{
  "\"\<3M_system_data.csv\>\"", ",", " ", "data", ",", " ", "\"\<CSV\>\""}], 
  "]"}]}], "Input",
 CellChangeTimes->{{3.9041733756541266`*^9, 3.904173431483632*^9}, {
   3.9041734638045025`*^9, 3.9041735031652555`*^9}, {3.9041735344299016`*^9, 
   3.9041735498167195`*^9}, 3.9041735821707325`*^9, {3.9041736296810055`*^9, 
   3.9041740925102854`*^9}, {3.9041743354389443`*^9, 3.90417436201492*^9}, {
   3.9041744311399174`*^9, 3.904174439535509*^9}, {3.9041744854915447`*^9, 
   3.9041745443804903`*^9}, {3.904260089891217*^9, 3.9042601116436195`*^9}, {
   3.9042601602743597`*^9, 3.904260162205103*^9}},
 CellLabel->"In[26]:=",ExpressionUUID->"6210c909-3353-4aaf-9b6a-c85fedf0caae"],

Cell[BoxData[
 TemplateBox[{
  "NDSolve", "ndsz", 
   "\"At \\!\\(\\*RowBox[{\\\"t\\\"}]\\) == \
\\!\\(\\*RowBox[{\\\"83.15106180159167`\\\"}]\\), step size is effectively \
zero; singularity or stiff system suspected.\"", 2, 29, 1, 
   20259993008852298520, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.9042601929357257`*^9},
 CellLabel->
  "During evaluation of \
In[26]:=",ExpressionUUID->"b993abf0-395c-4bde-8576-13e3ab07e810"],

Cell[BoxData[
 TemplateBox[{
  "InterpolatingFunction", "dmval", 
   "\"Input value \\!\\(\\*RowBox[{\\\"{\\\", \\\"1000\\\", \\\"}\\\"}]\\) \
lies outside the range of data in the interpolating function. Extrapolation \
will be used.\"", 2, 29, 2, 20259993008852298520, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.904260192951454*^9},
 CellLabel->
  "During evaluation of \
In[26]:=",ExpressionUUID->"e0e7b16f-8d5a-45af-9252-9db25d1fc15b"],

Cell[BoxData[
 TemplateBox[{
  "InterpolatingFunction", "dmval", 
   "\"Input value \\!\\(\\*RowBox[{\\\"{\\\", \\\"1000\\\", \\\"}\\\"}]\\) \
lies outside the range of data in the interpolating function. Extrapolation \
will be used.\"", 2, 29, 3, 20259993008852298520, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.9042601929671307`*^9},
 CellLabel->
  "During evaluation of \
In[26]:=",ExpressionUUID->"6fb4adaa-7f81-4cf3-872c-1ebf657a9320"],

Cell[BoxData[
 TemplateBox[{
  "InterpolatingFunction", "dmval", 
   "\"Input value \\!\\(\\*RowBox[{\\\"{\\\", \\\"1000\\\", \\\"}\\\"}]\\) \
lies outside the range of data in the interpolating function. Extrapolation \
will be used.\"", 2, 29, 4, 20259993008852298520, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.9042601929826946`*^9},
 CellLabel->
  "During evaluation of \
In[26]:=",ExpressionUUID->"207d225b-0257-471f-ad53-ab4462c68b84"],

Cell[BoxData[
 TemplateBox[{
  "General", "stop", 
   "\"Further output of \\!\\(\\*StyleBox[RowBox[{\\\"InterpolatingFunction\\\
\", \\\"::\\\", \\\"dmval\\\"}], \\\"MessageName\\\"]\\) will be suppressed \
during this calculation.\"", 2, 29, 5, 20259993008852298520, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.9042601929826946`*^9},
 CellLabel->
  "During evaluation of \
In[26]:=",ExpressionUUID->"90f436cf-0753-4650-a695-0766d619f00f"],

Cell[BoxData[
 TemplateBox[{
  "NDSolve", "ndsz", 
   "\"At \\!\\(\\*RowBox[{\\\"t\\\"}]\\) == \
\\!\\(\\*RowBox[{\\\"933.237573364358`\\\"}]\\), step size is effectively \
zero; singularity or stiff system suspected.\"", 2, 29, 6, 
   20259993008852298520, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.9042602039442596`*^9},
 CellLabel->
  "During evaluation of \
In[26]:=",ExpressionUUID->"b127280b-d25b-4437-852b-490793334da2"],

Cell[BoxData[
 TemplateBox[{
  "NDSolve", "ndsz", 
   "\"At \\!\\(\\*RowBox[{\\\"t\\\"}]\\) == \
\\!\\(\\*RowBox[{\\\"296.6696542206497`\\\"}]\\), step size is effectively \
zero; singularity or stiff system suspected.\"", 2, 29, 7, 
   20259993008852298520, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.9042602039911413`*^9},
 CellLabel->
  "During evaluation of \
In[26]:=",ExpressionUUID->"6080418e-07ff-4436-bc52-34156e59cf30"],

Cell[BoxData[
 TemplateBox[{
  "General", "stop", 
   "\"Further output of \\!\\(\\*StyleBox[RowBox[{\\\"NDSolve\\\", \
\\\"::\\\", \\\"ndsz\\\"}], \\\"MessageName\\\"]\\) will be suppressed during \
this calculation.\"", 2, 29, 8, 20259993008852298520, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.9042602039911413`*^9},
 CellLabel->
  "During evaluation of \
In[26]:=",ExpressionUUID->"4f1558b0-7151-43dc-bfca-d9d657f7af10"],

Cell[BoxData["\<\"3M_system_data.csv\"\>"], "Output",
 CellChangeTimes->{3.904174110996899*^9, 3.904174400225956*^9, 
  3.904174450481532*^9, 3.9042021235773106`*^9, 3.9042601158667765`*^9, 
  3.9042852219352846`*^9},
 CellLabel->"Out[30]=",ExpressionUUID->"e1a0362d-04b3-454c-87ed-a9815c884377"]
}, Open  ]]
},
WindowSize->{1012.5, 501.75},
WindowMargins->{{Automatic, 960}, {Automatic, 0}},
Magnification:>1.1 Inherited,
FrontEndVersion->"13.1 for Microsoft Windows (64-bit) (June 16, 2022)",
StyleDefinitions->"Default.nb",
ExpressionUUID->"b6bc11f6-4592-46e8-92b0-6eea6aa09fbc"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[558, 20, 14060, 416, 505, "Text",ExpressionUUID->"66ab22b8-542f-44b4-8ebe-1db6f57aaf4d"],
Cell[CellGroupData[{
Cell[14643, 440, 5682, 161, 249, "Input",ExpressionUUID->"dceb96e5-1ab9-48d9-8722-c5771acbb582"],
Cell[20328, 603, 4541, 131, 198, "Output",ExpressionUUID->"827427c8-1313-4e40-8c56-e4fc4bea6f3a"]
}, Open  ]],
Cell[CellGroupData[{
Cell[24906, 739, 3264, 88, 136, "Input",ExpressionUUID->"555896d3-a623-4c16-b93d-97908c5b5f86"],
Cell[28173, 829, 4848, 150, 251, "Output",ExpressionUUID->"b47ebcf2-af59-4001-8a2c-337b8cc5f589"]
}, Open  ]],
Cell[CellGroupData[{
Cell[33058, 984, 2415, 59, 94, "Input",ExpressionUUID->"b5138355-e3d5-423f-9041-26e7257d1612"],
Cell[35476, 1045, 51819, 937, 255, "Output",ExpressionUUID->"303f385e-476c-45d0-935a-8715837da33e"]
}, Open  ]],
Cell[CellGroupData[{
Cell[87332, 1987, 5301, 153, 199, "Input",ExpressionUUID->"c5e3208b-b00a-4496-8369-496d720eca88"],
Cell[92636, 2142, 2777, 81, 145, "Output",ExpressionUUID->"790cd92e-aa0f-4b15-addb-438b006b671f"]
}, Open  ]],
Cell[CellGroupData[{
Cell[95450, 2228, 2368, 60, 94, "Input",ExpressionUUID->"d2600bda-9f35-4116-8747-14715176dba4"],
Cell[97821, 2290, 90705, 1575, 265, "Output",ExpressionUUID->"79f14eb5-a79f-4e4d-a113-16d351598ee8"]
}, Open  ]],
Cell[CellGroupData[{
Cell[188563, 3870, 5265, 150, 232, "Input",ExpressionUUID->"624260ef-7444-4ee0-9555-d656281c9a89"],
Cell[193831, 4022, 647, 16, 52, "Output",ExpressionUUID->"a15b0b13-2dad-4bc0-9cca-a43c1b83f662"]
}, Open  ]],
Cell[CellGroupData[{
Cell[194515, 4043, 10851, 257, 514, "Input",ExpressionUUID->"6210c909-3353-4aaf-9b6a-c85fedf0caae"],
Cell[205369, 4302, 458, 11, 30, "Message",ExpressionUUID->"b993abf0-395c-4bde-8576-13e3ab07e810"],
Cell[205830, 4315, 468, 10, 30, "Message",ExpressionUUID->"e0e7b16f-8d5a-45af-9252-9db25d1fc15b"],
Cell[206301, 4327, 470, 10, 30, "Message",ExpressionUUID->"6fb4adaa-7f81-4cf3-872c-1ebf657a9320"],
Cell[206774, 4339, 470, 10, 30, "Message",ExpressionUUID->"207d225b-0257-471f-ad53-ab4462c68b84"],
Cell[207247, 4351, 468, 10, 30, "Message",ExpressionUUID->"90f436cf-0753-4650-a695-0766d619f00f"],
Cell[207718, 4363, 457, 11, 30, "Message",ExpressionUUID->"b127280b-d25b-4437-852b-490793334da2"],
Cell[208178, 4376, 458, 11, 30, "Message",ExpressionUUID->"6080418e-07ff-4436-bc52-34156e59cf30"],
Cell[208639, 4389, 453, 10, 30, "Message",ExpressionUUID->"4f1558b0-7151-43dc-bfca-d9d657f7af10"],
Cell[209095, 4401, 296, 4, 35, "Output",ExpressionUUID->"e1a0362d-04b3-454c-87ed-a9815c884377"]
}, Open  ]]
}
]
*)

